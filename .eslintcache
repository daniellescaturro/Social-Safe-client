[{"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js":"1","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js":"2","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js":"3","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js":"4","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js":"5","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js":"6","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js":"7","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js":"8","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js":"9","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js":"10","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js":"11","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js":"12","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js":"13","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js":"14","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js":"15"},{"size":542,"mtime":1607103651241,"results":"16","hashOfConfig":"17"},{"size":1269,"mtime":1607526349284,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1606956941132,"results":"19","hashOfConfig":"17"},{"size":2450,"mtime":1607522234531,"results":"20","hashOfConfig":"17"},{"size":2405,"mtime":1607523140832,"results":"21","hashOfConfig":"17"},{"size":1649,"mtime":1607548445487,"results":"22","hashOfConfig":"17"},{"size":7166,"mtime":1607530883410,"results":"23","hashOfConfig":"17"},{"size":5289,"mtime":1607527205349,"results":"24","hashOfConfig":"17"},{"size":4523,"mtime":1607523042126,"results":"25","hashOfConfig":"17"},{"size":4009,"mtime":1607530735314,"results":"26","hashOfConfig":"17"},{"size":4816,"mtime":1607527554262,"results":"27","hashOfConfig":"17"},{"size":4428,"mtime":1607527899427,"results":"28","hashOfConfig":"17"},{"size":320,"mtime":1607363854596,"results":"29","hashOfConfig":"17"},{"size":3257,"mtime":1607530620885,"results":"30","hashOfConfig":"17"},{"size":3329,"mtime":1607528850804,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fqvaj2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js",[],["71","72"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js",["73"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js",["74","75"],"import React, { Component, useState } from 'react'\nimport HomeList from '../HomeList'\nimport EditRestaurantModal from '../EditRestaurantModal' //added\nimport ReviewModal from '../ReviewModal'\nimport { Header, Search, Grid, Label} from 'semantic-ui-react'\n\n//original code before adds, except where noted.\nexport default class HomeContainer extends Component {\n  constructor(props) {\n    super(props)\n\n      this.state = {\n        restaurants: [],\n        favorites: {},\n        idOfRestaurantToEdit: -1,\n        idOfRestaurantToReview: -1,\n        restaurantToReview: {},\n        action: '',\n        searchResult: []\n      }\n    }\n\n    setActionState = (action) => {\n      this.setState({\n        action: action\n      })\n    }\n\n    setSearchResults = (results) => {\n      this.setState({\n        searchResult: results\n      })\n    }\n\n    getRestaurants = async () => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\"\n        const restaurantsResponse = await fetch(url, {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      const restaurantsJson = await restaurantsResponse.json()\n\n      if(restaurantsResponse.status === 200 || restaurantsResponse.status === 201 ) {\n        this.setState({\n       restaurants: restaurantsJson.data\n      })\n      }\n    } catch(err) {\n      console.log(\"Error getting items data.\", err);\n    }\n\n    try {\n        let url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n        let res = await fetch(url, {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let resJson = await res.json()\n        let favs = {}\n        resJson.data.forEach((item, i) => {\n          favs[item['restaurant_id']['id']] = item;\n        });\n        this.setState({favorites: favs})\n\n    }catch(err){\n      console.log(\"ERR\", err)\n    }\n  }\n\n    componentDidMount() {\n      this.getRestaurants()\n  }\n\n\n\n\n  deleteRestaurant = async (idOfRestaurantToDelete) => {\n     try {\n       const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + idOfRestaurantToDelete\n\n       const deleteRestaurantResponse = await fetch(url, {\n         method: 'DELETE',\n         credentials: 'include'\n       })\n\n       const deleteRestaurantJson = await deleteRestaurantResponse.json()\n       \n       if(deleteRestaurantResponse.status === 200) {\n         this.setState({\n           restaurants: this.state.restaurants.filter(restaurant => restaurant.id !== idOfRestaurantToDelete)\n         })\n       }\n     } catch(err) {\n       console.log(\"Error deleting restaurant: \", err)\n     }\n   }\n\n\n  editRestaurant = (idOfRestaurantToEdit) => {\n    this.setState({\n      idOfRestaurantToEdit: idOfRestaurantToEdit\n    })\n  }\n\n  reviewRestaurant = (restaurantToReview) => {\n    this.setState({\n      idOfRestaurantToReview: restaurantToReview.id,\n      restaurantToReview: restaurantToReview\n    })\n  }\n\n  updateRestaurant = async (updatedRestaurantInfo) => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + this.state.idOfRestaurantToEdit\n\n      const updateRestaurantResponse = await fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(updatedRestaurantInfo),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      const updateRestaurantJson = await updateRestaurantResponse.json()\n\n      if(updateRestaurantResponse.status === 200) {\n        const restaurants = this.state.restaurants\n        const indexOfRestaurantBeingUpdated = restaurants.findIndex(restaurant => restaurant.id === this.state.idOfRestaurantToEdit)\n        restaurants[indexOfRestaurantBeingUpdated] =  updateRestaurantJson.data\n        this.setState({\n          restaurants: restaurants,\n          idOfRestaurantToEdit: -1\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n\n  closeModal = () => {\n   this.setState({\n     idOfRestaurantToEdit: -1\n   })\n }\n\n  closeReviewModal = () => {\n    this.setState({\n      idOfRestaurantToReview: -1\n    })\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <CustomSearch setSearchResults={this.setSearchResults}/>\n        <HomeList\n          restaurants={this.state.searchResult}\n          favorites={this.state.favorites}\n          editRestaurant={this.editRestaurant}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n          />\n        <Header as='h2' className=\"listHeaders\">See All the Restaurants</Header>\n        <div className=\"HomeContainer\">\n        <HomeList\n          restaurants={this.state.restaurants}\n          favorites={this.state.favorites}\n          editRestaurant={this.editRestaurant}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n        />\n\n      {\n        this.state.idOfRestaurantToEdit !== -1\n        &&\n        <EditRestaurantModal\n          restaurantToEdit={this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit)}\n          updateRestaurant={this.updateRestaurant}\n          closeModal={this.closeModal}\n        />\n      }\n\n      {\n        this.state.idOfRestaurantToReview !== -1\n        &&\n        <ReviewModal\n          restaurantToReview={this.state.restaurantToReview}\n          closeModal={this.closeReviewModal}\n          idOfRestaurantToReview={this.state.idOfRestaurantToReview}\n        />\n      }\n\n      </div>\n      </React.Fragment>\n   )\n  }\n}\n\n\nconst CustomSearch = ({ setSearchResults }) => {\n  const  [loading, setLoading] = useState(false)\n  const [results, setResults] = useState([])\n  const [value, setValue] = useState(\"\")\n  const timeoutRef = React.useRef()\n\n  const resultRenderer = ({ name }) => <Label content={name} />\n\n  const handleSearchChange = React.useCallback((e, data)=>{\n    clearTimeout(timeoutRef.current)\n    setValue(data.value)\n    setLoading(true)\n    timeoutRef.current = setTimeout(async()=>{\n\n      try {\n        const url = process.env.REACT_APP_API_URL + `/api/v1/restaurants/search?location=${value}`\n        const restaurantsResponse = await fetch(url, {\n          credentials: 'include',\n        })\n\n        const restaurantsJson = await restaurantsResponse.json()\n        setLoading(false)\n        setResults(restaurantsJson.data)\n        setSearchResults(restaurantsJson.data)\n      } catch(err) {\n          console.log(\"There was an error getting the item's data. Please try again.\", err)\n      }\n    }, 2000)\n  }, [value])\n\n  React.useEffect(()=> {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n  return(\n    <Grid>\n      <Grid.Column width={5}></Grid.Column>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          results={results}\n          resultRenderer={resultRenderer}\n          onSearchChange={handleSearchChange}\n          value={value}\n        />\n      </Grid.Column>\n      <Grid.Column width={5}></Grid.Column>\n    </Grid>\n  )\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js",["76","77","78","79"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\nconst RenderRestaurant = ({\n                          restaurant,\n                          favorite,\n                          editRestaurant,\n                          deleteRestaurant,\n                          reviewRestaurant\n                        }) => {\n  let f = false\n  if(favorite !== undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite !== undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        const updateJson = await updateResponse.json()\n      }else{\n        if(restaurant.id !== undefined){\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n          const updatedFavoriteInfo = { favorite: !isFavorite }\n          const updateResponse = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(updatedFavoriteInfo),\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n\n          const updateJson = await updateResponse.json()\n        }else {\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/-1\"\n          const updatedFavoriteInfo = { favorite: !isFavorite }\n          const data = {\n            restaurant: restaurant,\n            favorite: !isFavorite\n          }\n          const updateResponse = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          const updateJson = await updateResponse.json()\n        }\n      }\n      setFavorite(!isFavorite)\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n  const  calculateAvg = (reviews) => {\n    let total = 0\n    reviews.forEach((item, i) => {\n        total += item.social_distancing_rating\n    });\n    return total / reviews.length\n  }\n\n  const  calculateAvgSS = (reviews) => {\n    let total = 0\n    reviews.forEach((item, i) => {\n        total += item.rating\n    });\n    return total / reviews.length\n  }\n\n  return(\n    <Card color='brown' key={restaurant.id}>\n      <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n      <Card.Content center={true}>\n        <Card.Header>\n          <a href={restaurant.url}>{restaurant.name}</a>\n        </Card.Header>\n        <p className=\"restaurantCategory\">{restaurant.title}</p>\n        <Card.Meta>{restaurant.address1}</Card.Meta>\n        <Card.Meta className=\"address\">{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n        <p className=\"cardDetail\"> Yelp Rating: {restaurant.rating}</p>\n        <p className=\"cardDetail\">Social Safe Rating: {restaurant.reviews.length===0 ? \"Not yet rated\" : calculateAvgSS(restaurant.reviews) }</p>\n        <p className=\"cardDetail\">Social Distance Rating: {restaurant.reviews.length===0 ? \"Not yet rated\" : calculateAvg(restaurant.reviews) }</p>\n        <p className=\"cardDetail\">Heat Lamps: {restaurant.heat_lamps===true?'Yes':'No'}</p>\n        {\n          (restaurant.id !== undefined)\n          ?\n          <Link to={`/restaurants/${restaurant.id}`}>[See Details]</Link>\n          :\n          ''\n        }\n      </Card.Content>\n\n      {\n        (restaurant.id !== undefined && JSON.parse(localStorage.getItem('userData')).id === restaurant.uploader.id)\n        ?\n        <Card.Content extra>\n          <Button\n            basic color='brown' onClick={()=> editRestaurant(restaurant.id)}>\n            Edit\n          </Button>\n          <Button\n            basic color='brown'\n            onClick={()=> deleteRestaurant(restaurant.id)}>\n            Delete\n          </Button>\n        </Card.Content>\n        :\n        ''\n      }\n\n      <Card.Content extra>\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n        <Button color='brown' onClick={() => reviewRestaurant(restaurant)}>Review</Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default function HomeList(props) {\n  const restaurantsToDisplay = props.restaurants.map(restaurant => {\n    return <RenderRestaurant\n              restaurant={restaurant}\n              favorite={props.favorites[restaurant.id]}\n              key={restaurant.id}\n              deleteRestaurant={props.deleteRestaurant}\n              editRestaurant={props.editRestaurant}\n              reviewRestaurant={props.reviewRestaurant}\n          />\n  })\n\n  return(\n    <Card.Group centered={true}>\n      {restaurantsToDisplay}\n    </Card.Group>\n  )\n\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js",["80"],"import React, { Component } from 'react'\nimport { Form, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\nimport '../index.css'\n\n\nexport default class NewRestaurantForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    }\n  }\n\n  handleChange = (event, data) => {\n    if(data.type === 'checkbox'){\n\n      this.setState({\n        ['heat_lamps']: data.checked\n      })\n    }else{\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.createRestaurant(this.state)\n\n    this.setState({\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    })\n  }\n\n\n  createRestaurant = async (restaurantToAdd) => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/add\"\n        const createRestaurantResponse = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(restaurantToAdd)\n        })\n        const createRestaurantJson = await createRestaurantResponse.json()\n\n        if(createRestaurantResponse.status === 201 || createRestaurantResponse.status === 200){\n          this.setState({\n            restaurants: [...this.state.restaurants, createRestaurantJson.data]\n          })\n        }\n\n      } catch(err) {\n        console.log(\"Error adding restaurant\", err)\n      }\n      localStorage.setItem('active', 'active')\n      this.props.history.push('/')\n    }\n\n  render() {\n    return(\n      <Segment className='form'>\n      <Header className='formHeader' as='h2' color='grey'>Add Restaurant</Header>\n      <Form onSubmit={this.handleSubmit}>\n\n        <Label horizontal>Restaurant Name:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          placeholder=\"Enter restaurant name\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Image:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"image_url\"\n          value={this.state.image_url}\n          placeholder=\"Enter an image link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Link:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"url\"\n          value={this.state.url}\n          placeholder=\"Enter website link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Category:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"Enter category\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Street Address:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"address1\"\n          value={this.state.address1}\n          placeholder=\"Enter street address\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>City:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"city\"\n          value={this.state.city}\n          placeholder=\"Enter city\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>State:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"state\"\n          value={this.state.state}\n          placeholder=\"Enter state\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Zip Code:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"zip_code\"\n          value={this.state.zip_code}\n          placeholder=\"Enter zip code\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Rating:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"rating\"\n          max=\"5\"\n          min=\"1\"\n          value={this.state.rating}\n          placeholder=\"Enter a rating\"\n          onChange={this.handleChange}\n        />\n        <Label horizontal>Heat Lamps: </Label>\n        <Form.Input\n          control={Checkbox}\n          checked={this.state.heat_lamps}\n          onChange={this.handleChange}\n        />\n\n        <Button type='submit'>Submit</Button>\n        </Form>\n      </Segment>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js",["81"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, Checkbox, Header } from 'semantic-ui-react'\nimport '../index.css'\n\nexport default class EditRestaurantModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.restaurantToEdit.name,\n      image_url: props.restaurantToEdit.image_url,\n      url: props.restaurantToEdit.image_url,\n      title: props.restaurantToEdit.title,\n      address1: props.restaurantToEdit.address1,\n      city: props.restaurantToEdit.city,\n      state: props.restaurantToEdit.state,\n      zip_code: props.restaurantToEdit.zip_code,\n      rating: props.restaurantToEdit.rating,\n      heat_lamps: props.restaurantToEdit.heat_lamps\n    }\n  }\n\n  handleChange = (event, data) => {\n    if(data.type === 'checkbox'){\n\n      this.setState({\n        ['heat_lamps']: data.checked\n      })\n    }else{\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateRestaurant(this.state)\n  }\n\n\n  render() {\n    return(\n      <Modal className='form' open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header className='formHeader' as='h2' color='grey'>Edit Restaurant</Header>\n        <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Restaurant Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter restaurant name\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Image:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"image_url\"\n            value={this.state.image_url}\n            placeholder=\"Enter an image link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Link:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            placeholder=\"Enter website link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Category:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            placeholder=\"Enter category\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Street Address:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"address1\"\n            value={this.state.address1}\n            placeholder=\"Enter street address\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>City:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            placeholder=\"Enter city\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>State:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"state\"\n            value={this.state.state}\n            placeholder=\"Enter state\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Zip Code:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"zip_code\"\n            value={this.state.zip_code}\n            placeholder=\"Enter zip code\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            value={this.state.rating}\n            placeholder=\"Enter a rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            control={Checkbox}\n            checked={this.state.heat_lamps}\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js",["82"],"import React, { Component } from 'react'\nimport MyRestaurantsList from '../MyRestaurantsList'\nimport EditRestaurantModal from '../EditRestaurantModal'\nimport ReviewModal from '../ReviewModal'\nimport { Header } from 'semantic-ui-react'\n\nexport default class MyRestaurantsContainer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      restaurants: [],\n      idOfRestaurantToEdit: -1,\n      idOfRestaurantToReview: -1,\n      restaurantToReview: {},\n      action: '',\n    }\n  }\n\n  setActionState = (action) => {\n    this.setState({\n      action: action\n    })\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  removeFavorite = (fav) =>{\n    let temp = this.state.restaurants.filter(res=>res.id !== fav.id)\n    this.setState({\n      restaurants: temp\n    })\n  }\n\n  getRestaurants = async () => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n      const restaurantsResponse = await fetch(url, {\n        credentials: 'include',\n      })\n\n      const restaurantsJson = await restaurantsResponse.json()\n      console.log(restaurantsJson)\n\n    if(restaurantsResponse.status === 200 || restaurantsResponse.status === 201 ) {\n      this.setState({\n        restaurants: restaurantsJson.data\n      })\n    }\n    } catch(err) {\n        console.log(\"There was an error getting the item's data. Please try again.\", err)\n    }\n  }\n\n\n  deleteRestaurant = async (idOfRestaurantToDelete) => {\n     try {\n       const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + idOfRestaurantToDelete\n\n       const deleteRestaurantResponse = await fetch(url, {\n         method: 'DELETE',\n         credentials: 'include'\n       })\n\n       const deleteRestaurantJson = await deleteRestaurantResponse.json()\n\n       if(deleteRestaurantResponse.status === 200) {\n         this.setState({\n           restaurants: this.state.restaurants.filter(restaurant => restaurant.restaurant_id.id !== idOfRestaurantToDelete)\n         })\n       }\n     } catch(err) {\n       console.log(\"Error deleting restaurant: \", err)\n     }\n   }\n\n\n  editRestaurant = (idOfRestaurantToEdit) => {\n\n    this.setState({\n      idOfRestaurantToEdit: idOfRestaurantToEdit\n    })\n  }\n\n  reviewRestaurant = (restaurantToReview) => {\n    this.setState({\n      idOfRestaurantToReview: restaurantToReview.id,\n      restaurantToReview: restaurantToReview\n    })\n  }\n\n  updateRestaurant = async (updatedRestaurantInfo) => {\n    try {\n      let id = this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id.id\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + id\n\n      const updateRestaurantResponse = await fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(updatedRestaurantInfo),\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      const updateRestaurantJson = await updateRestaurantResponse.json()\n\n      if(updateRestaurantResponse.status === 200) {\n        const restaurants = this.state.restaurants\n        const indexOfRestaurantBeingUpdated = restaurants.findIndex(restaurant => restaurant.id === this.state.idOfRestaurantToEdit)\n        restaurants[indexOfRestaurantBeingUpdated].restaurant_id =  updateRestaurantJson.data\n        this.setState({\n          restaurants: restaurants,\n          idOfRestaurantToEdit: -1\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n  closeModal = () => {\n   this.setState({\n     idOfRestaurantToEdit: -1\n   })\n }\n\n closeReviewModal = () => {\n   this.setState({\n     idOfRestaurantToReview: -1\n   })\n }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header as='h2' className=\"listHeaders\">My Favorites</Header>\n      <div className=\"myRestaurantsContainer\">\n        <MyRestaurantsList\n          restaurants={this.state.restaurants}\n          editRestaurant={this.editRestaurant}\n          removeFavorite={this.removeFavorite}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n          />\n\n      {\n        this.state.idOfRestaurantToEdit !== -1\n        &&\n        <EditRestaurantModal\n          restaurantToEdit={this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id}\n          updateRestaurant={this.updateRestaurant}\n          closeModal={this.closeModal}\n        />\n      }\n\n      {\n        this.state.idOfRestaurantToReview !== -1\n        &&\n        <ReviewModal\n          restaurantToReview={this.state.restaurantToReview}\n          closeModal={this.closeReviewModal}\n          idOfRestaurantToReview={this.state.idOfRestaurantToReview}\n        />\n      }\n\n      </div>\n      </React.Fragment>\n    )\n  }\n\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js",["83"],"import React, { useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\n\nconst Fav = ({restaurant, favorite, removeFavorite}) => {\n  let f = false\n  if(favorite !== undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite !== undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status === 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        const updateJson = await updateResponse.json()\n\n        if(updateResponse.status === 200) {\n        }\n      }\n      setFavorite(!isFavorite)\n      removeFavorite(favorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n  return(\n    <Button onClick={()=> { handleClick()}} icon>\n      { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n    </Button>\n  )\n}\n\nconst  calculateAvg = (reviews) => {\n  let total = 0\n  reviews.forEach((item, i) => {\n      total += item.social_distancing_rating\n  });\n  return total / reviews.length\n}\n\nconst  calculateAvgSS = (reviews) => {\n  let total = 0\n  reviews.forEach((item, i) => {\n      total += item.rating\n  });\n  return total / reviews.length\n}\n\n\nexport default function MyRestaurantsList(props) {\n  const restaurants = props.restaurants.map(fav => {\n    let restaurant = fav.restaurant_id\n    return (\n      <Card color='brown' key={restaurant.id}>\n        <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n        <Card.Content>\n          <Card.Header>\n            <a href={restaurant.url}>{restaurant.name}</a>\n          </Card.Header>\n          <p className=\"restaurantCategory\">{restaurant.title}</p>\n          <Card.Meta>{restaurant.address1}</Card.Meta>\n          <Card.Meta className=\"address\">{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n          <p className=\"cardDetail\">Yelp Rating: {restaurant.rating}</p>\n          <p className=\"cardDetail\">Social Safe Rating: {restaurant.reviews.length===0 ? \"Not yet rated\" : calculateAvgSS(restaurant.reviews) }</p>\n          <p className=\"cardDetail\">Social Distance Rating: {restaurant.reviews.length===0 ? \"Not yet rated\" : calculateAvg(restaurant.reviews) }</p>\n          <p className=\"cardDetail\">Heat Lamps: {restaurant.heat_lamps === true ? 'Yes': 'No'}</p>\n          <Link to={`/restaurants/${restaurant.id}`}>[See Details]</Link>\n        </Card.Content>\n        {\n          JSON.parse(localStorage.getItem('userData')).id === restaurant.uploader.id\n          ?\n          <Card.Content extra>\n            <Button\n              basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n              Edit\n            </Button>\n            <Button\n              basic color='brown'\n              onClick={()=> props.deleteRestaurant(restaurant.id)}>\n              Delete\n            </Button>\n          </Card.Content>\n          :\n          ''\n        }\n        <Card.Content extra>\n          <Fav\n            restaurant={restaurant}\n            favorite={fav}\n            removeFavorite={props.removeFavorite}\n            />\n          <Button color='brown' onClick={() => props.reviewRestaurant(restaurant)}>Review</Button>\n        </Card.Content>\n      </Card>\n    )\n  })\n\n  return (\n    <Card.Group centered={true}>\n      {restaurants}\n    </Card.Group>\n  )\n}\n",["84","85"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js",["86","87","88","89"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, TextArea, Checkbox, Header } from 'semantic-ui-react'\n\n\nexport default class ReviewModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rating: '',\n      social_distancing_rating: '',\n      comments: ''\n    }\n  }\n\n  handleChange = (event, data) => {\n          \n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.createReview(this.state)\n\n    this.setState({\n      rating: '',\n      social_distancing_rating: '',\n      comments: ''\n    })\n  }\n\n  createReview = async (reviewToAdd) => {\n      try {\n        if(this.props.restaurantToReview.id !== undefined){\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/reviews/\" + this.props.idOfRestaurantToReview\n          const createReviewResponse = await fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(reviewToAdd)\n          })\n          const createReviewJson = await createReviewResponse.json()\n\n          if(createReviewResponse.status === 201 || createReviewResponse.status === 200){\n            this.props.closeModal()\n          }\n        }else {\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/reviews/-1\"\n          const data = {\n            review: reviewToAdd,\n            restaurant: this.props.restaurantToReview\n          }\n          const createReviewResponse = await fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify(data)\n          })\n          const createReviewJson = await createReviewResponse.json()\n\n          if(createReviewResponse.status === 201 || createReviewResponse.status === 200){\n            this.props.closeModal()\n          }\n        }\n\n\n      } catch(err) {\n        console.log(\"Error adding review\", err)\n      }\n    }\n\n  render() {\n    return(\n      <Modal open={true} closeIcon={true} onClose={this.props.closeModal}>\n\n        <Header>\n          <h2>Review Restaurant</h2>\n        </Header>\n\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            max=\"5\"\n            min=\"1\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Social Distance Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"social_distancing_rating\"\n            max=\"5\"\n            min=\"1\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Comments:</Label>\n          <Form.TextArea\n            name=\"comments\"\n            value={this.state.comments}\n            placeholder=\"Enter comments\"\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":20,"column":12,"nodeType":"96","messageId":"97","endLine":20,"endColumn":22},{"ruleId":"94","severity":1,"message":"98","line":94,"column":14,"nodeType":"96","messageId":"97","endLine":94,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":240,"column":6,"nodeType":"101","endLine":240,"endColumn":13,"suggestions":"102"},{"ruleId":"94","severity":1,"message":"103","line":35,"column":15,"nodeType":"96","messageId":"97","endLine":35,"endColumn":25},{"ruleId":"94","severity":1,"message":"103","line":49,"column":17,"nodeType":"96","messageId":"97","endLine":49,"endColumn":27},{"ruleId":"94","severity":1,"message":"104","line":52,"column":17,"nodeType":"96","messageId":"97","endLine":52,"endColumn":36},{"ruleId":"94","severity":1,"message":"103","line":65,"column":17,"nodeType":"96","messageId":"97","endLine":65,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":29,"column":9,"nodeType":"107","messageId":"108","endLine":29,"endColumn":37,"fix":"109"},{"ruleId":"105","severity":1,"message":"106","line":28,"column":9,"nodeType":"107","messageId":"108","endLine":28,"endColumn":37,"fix":"110"},{"ruleId":"94","severity":1,"message":"98","line":68,"column":14,"nodeType":"96","messageId":"97","endLine":68,"endColumn":34},{"ruleId":"94","severity":1,"message":"103","line":48,"column":15,"nodeType":"96","messageId":"97","endLine":48,"endColumn":25},{"ruleId":"90","replacedBy":"111"},{"ruleId":"92","replacedBy":"112"},{"ruleId":"94","severity":1,"message":"113","line":2,"column":38,"nodeType":"96","messageId":"97","endLine":2,"endColumn":46},{"ruleId":"94","severity":1,"message":"114","line":2,"column":48,"nodeType":"96","messageId":"97","endLine":2,"endColumn":56},{"ruleId":"94","severity":1,"message":"115","line":49,"column":17,"nodeType":"96","messageId":"97","endLine":49,"endColumn":33},{"ruleId":"94","severity":1,"message":"115","line":68,"column":17,"nodeType":"96","messageId":"97","endLine":68,"endColumn":33},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'logoutJson' is assigned a value but never used.","Identifier","unusedVar","'deleteRestaurantJson' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'setSearchResults'. Either include it or remove the dependency array. If 'setSearchResults' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["118"],"'updateJson' is assigned a value but never used.","'updatedFavoriteInfo' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['heat_lamps'] found.","Property","unnecessarilyComputedProperty",{"range":"119","text":"120"},{"range":"121","text":"120"},["116"],["117"],"'TextArea' is defined but never used.","'Checkbox' is defined but never used.","'createReviewJson' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},[564,578],"'heat_lamps'",[838,852],"Update the dependencies array to be: [setSearchResults, value]",{"range":"124","text":"125"},[6684,6691],"[setSearchResults, value]"]