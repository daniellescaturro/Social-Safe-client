[{"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js":"1","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js":"2","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js":"3","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js":"4","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js":"5","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js":"6","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js":"7","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js":"8","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js":"9","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js":"10","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js":"11","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js":"12"},{"size":542,"mtime":1607103651241,"results":"13","hashOfConfig":"14"},{"size":1099,"mtime":1607270360995,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606956941132,"results":"16","hashOfConfig":"14"},{"size":2583,"mtime":1607294498306,"results":"17","hashOfConfig":"14"},{"size":3308,"mtime":1607282544330,"results":"18","hashOfConfig":"14"},{"size":2310,"mtime":1607284041044,"results":"19","hashOfConfig":"14"},{"size":2202,"mtime":1607187923529,"results":"20","hashOfConfig":"14"},{"size":3685,"mtime":1607352341699,"results":"21","hashOfConfig":"14"},{"size":4610,"mtime":1607299414754,"results":"22","hashOfConfig":"14"},{"size":4277,"mtime":1607299223024,"results":"23","hashOfConfig":"14"},{"size":4085,"mtime":1607352243533,"results":"24","hashOfConfig":"14"},{"size":3724,"mtime":1607299572203,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fqvaj2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js",[],["56","57"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js",["58","59"],"import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch, Redirect, Link} from 'react-router-dom';\n\nimport LoginRegisterContainer from './LoginRegisterContainer'\nimport Navbar from './Navbar'\nimport HomeContainer from './HomeContainer'\nimport MyRestaurantsContainer from './MyRestaurantsContainer'\nimport NewRestaurantForm from './NewRestaurantForm'\n\nimport './App.css';\n\nconst Protected = ({ component: Component,  ...rest}) => {\n  return <Route {...rest} render={(props)=>(\n    localStorage.getItem('active') === 'active' ? <Component {...props}/> : <Redirect to='/login'/>\n  )} />\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar/>\n        <Switch>\n          <Route path=\"/login\" exact component={LoginRegisterContainer}/>\n          <Protected path='/' exact component={HomeContainer}/>\n          <Protected path='/favorites' exact component={MyRestaurantsContainer}/>\n          <Protected path='/add_restaurant' exact component={NewRestaurantForm}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js",["60","61"],"import React from 'react'\nimport {withRouter} from 'react-router'\nimport { Menu, Button, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport NewRestaurantForm from '../NewRestaurantForm'\nimport '../index.css'\nimport '../App.css'\n\n// \tORIGINAL LOGOUT FUNCTION\n// const logout = async () => {\n//   try {\n//     const url = process.env.REACT_APP_API_URL + \"/api/v1/users/logout\"\n//\n//     const logoutResponse = await fetch(url, {\n//       credentials: 'include'\n//     })\n//     console.log(\"logoutResponse\", logoutResponse);\n//     const logoutJson = await logoutResponse.json()\n//     console.log(\"logoutJson\", logoutJson);\n//\n//     if(logoutResponse.status === 200) {\n//       localStorage.setItem('active', false);\n//\t\t\t props.history.push('/');\n//     }\n//   } catch(error) {\n//     console.error(\"Error logging out\")\n//     console.error(error)\n//   }\n// }\n\n function Navbar(props) {\n\n\tconst logout = async () => {\n\t  try {\n\t    const url = process.env.REACT_APP_API_URL + \"/api/v1/users/logout\"\n\n\t    const logoutResponse = await fetch(url, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tcredentials: 'include'\n\t    })\n\t    console.log(\"logoutResponse\", logoutResponse);\n\t    const logoutJson = await logoutResponse.json()\n\t    console.log(\"logoutJson\", logoutJson);\n\n\t    if(logoutResponse.status === 200) {\n\t      localStorage.setItem('active', null);\n\t\t\t\tlocalStorage.setItem('userData', null);\n\t\t\t\tprops.history.push('/login');\n\t    }\n\t  } catch(error) {\n\t    console.error(\"Error logging out\")\n\t    console.error(error)\n\t  }\n\t}\n\n\n\treturn (\n\t\t<Menu secondary pointing className=\"navbar\">\n\t\t\t<Menu.Item><Icon name='glass martini' color='black'></Icon></Menu.Item>\n\t\t\t<Menu.Item fontsize={18}><Link to='/'>Social Safe</Link></Menu.Item>\n\t\t\t<Menu.Item><Link to=\"/favorites\">My Favorites</Link></Menu.Item>\n\t\t\t<Menu.Item><Link to=\"/add_restaurant\">Add Restaurant</Link></Menu.Item>\n\t\t\t<Menu.Item position='right'><Link to=\"/login\">Login</Link></Menu.Item>\n\t\t\t<Menu.Item><Link to=\"#\" onClick={()=>logout()}>Logout</Link></Menu.Item>\n\t\t</Menu>\n\t)\n}\nexport default withRouter(Navbar)\n\n//DO I NEED A BUTTON FOR LOGOUT? OR CAN IT BE ACCOMPLISHED WITH A LINK, LIKE ABOVE?\n// <Button size='small' onClick={()=>logout()}>\n// Logout\n// </Button>\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js",["62","63"],"import React, { Component } from 'react'\nimport HomeList from '../HomeList'\n\nexport default class HomeContainer extends Component {\n  constructor(props) {\n    super(props)\n\n      this.state = {\n        restaurants: [],\n        favorites: {},\n        action: ''\n      }\n    }\n\n    setActionState = (action) => {\n      this.setState({\n        action: action\n      })\n    }\n\n    getRestaurants = async () => {\n      try {\n\n        console.log(\"the env\", process.env.REACT_APP_API_URL)\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\"\n        console.log(\"about to fetch data from:\")\n        console.log(url)\n        const restaurantsResponse = await fetch(url, {\n        method: 'GET', //this commented out in dev-resources\n        // mode: \"no-cors\",\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        } //headers commented out in dev-resources\n      })\n      console.log(restaurantsResponse)\n      const restaurantsJson = await restaurantsResponse.json()\n      console.log(restaurantsJson)\n\n      if(restaurantsResponse.status == 200 || restaurantsResponse.status == 201 ) {\n        this.setState({\n       restaurants: restaurantsJson.data\n      })\n      }\n    } catch(err) {\n      console.log(\"Error getting items data.\", err);\n    }\n\n    try {\n        let url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n        let res = await fetch(url, {\n          method: 'GET', //this commented out in dev-resources\n          // mode: \"no-cors\",\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let resJson = await res.json()\n        let favs = {}\n        resJson.data.forEach((item, i) => {\n          console.log(\"item\",item)\n          favs[item['restaurant_id']['id']] = item;\n        });\n        this.setState({favorites: favs})\n\n    }catch(err){\n      console.log(\"ERR\", err)\n    }\n  }\n\n    componentDidMount() {\n      this.getRestaurants()\n  }\n\n\n  render() {\n    return (\n      <div className=\"HomeContainer\">\n        <HomeList restaurants={this.state.restaurants} favorites={this.state.favorites} />\n    </div>\n   )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js",["64","65","66","67","68","69","70"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js",["71"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\n\nexport default class EditRestaurantModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.restaurantToEdit.name,\n      image_url: props.restaurantToEdit.image_url,\n      url: props.restaurantToEdit.image_url,\n      title: props.restaurantToEdit.title,\n      address1: props.restaurantToEdit.address1,\n      city: props.restaurantToEdit.city,\n      state: props.restaurantToEdit.state,\n      zip_code: props.restaurantToEdit.zip_code,\n      rating: props.restaurantToEdit.rating,\n      //social_distancing_rating: props.restaurantToEdit, //this is in my Review model, but want data entry available here, if possible\n      heat_lamps: props.restaurantToEdit.heat_lamps\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateRestaurant(this.state)\n  }\n\n\n  render() {\n    return(\n      <Modal className='form' open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header className='formHeader' as='h2' color='grey'>Edit Restaurant</Header>\n        <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Restaurant Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter restaurant name\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Image:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"image_url\"\n            value={this.state.image_url}\n            placeholder=\"Enter an image link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Link:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            placeholder=\"Enter website link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Category:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            placeholder=\"Enter category\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Street Address:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"address1\"\n            value={this.state.address1}\n            placeholder=\"Enter street address\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>City:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            placeholder=\"Enter city\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>State:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"state\"\n            value={this.state.state}\n            placeholder=\"Enter state\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Zip Code:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"zip_code\"\n            value={this.state.zip_code}\n            placeholder=\"Enter zip code\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            value={this.state.rating}\n            placeholder=\"Enter a rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            control={Checkbox}\n            name=\"heat_lamps\"\n            value={this.state.heat_lamps}\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\n// <Label horizontal>Social Distancing Rating:</Label>\n// <Form.Input\n//   type=\"number\"\n//   name=\"rating\"\n//   value={this.state.social_distancing_rating}\n//   placeholder=\"Enter a social distancing rating\"\n//   onChange={this.handleChange}\n// />\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js",["72","73"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js",["74","75","76","77","78","79"],"import React, { useEffect, useState} from 'react'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\n\nconst Fav = ({restaurant, favorite, removeFavorite}) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n      removeFavorite(favorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  return(\n\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n  )\n}\n\nexport default function MyRestaurantsList(props) {\n  const restaurants = props.restaurants.map(fav => {\n    let restaurant = fav.restaurant_id\n    return (\n      <Card color='brown' key={restaurant.id}>\n        <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n        <Card.Content>\n          <Card.Header>\n            <a href={restaurant.url}>{restaurant.name}</a>\n          </Card.Header>\n          <Card.Meta>{restaurant.title}</Card.Meta>\n          <Card.Meta>{restaurant.address1}</Card.Meta>\n          <Card.Meta>{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n          <Card.Meta>Rating: {restaurant.rating}</Card.Meta>\n          <Card.Meta>Heat Lamps: {restaurant.heat_lamps == true ? 'Yes': 'No'}</Card.Meta>\n        </Card.Content>\n        {\n          JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n          ?\n          <Card.Content extra>\n            <Button\n              basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n              Edit\n            </Button>\n            <Button\n              basic color='brown'\n              onClick={()=> props.deleteRestaurant(restaurant.id)}>\n              Delete\n            </Button>\n          </Card.Content>\n          :\n          ''\n        }\n        <Card.Content extra>\n          <Fav\n            restaurant={restaurant}\n            favorite={fav}\n            removeFavorite={props.removeFavorite}\n            />\n          <Button color='brown'>Review</Button>\n        </Card.Content>\n      </Card>\n    )\n  })\n\n  return (\n    <Card.Group centered={true}>\n      {restaurants}\n    </Card.Group>\n  )\n}\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":2,"column":50,"nodeType":"86","messageId":"87","endLine":2,"endColumn":54},{"ruleId":"84","severity":1,"message":"89","line":3,"column":16,"nodeType":"86","messageId":"87","endLine":3,"endColumn":22},{"ruleId":"84","severity":1,"message":"90","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":40,"column":37,"nodeType":"93","messageId":"94","endLine":40,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":40,"column":74,"nodeType":"93","messageId":"94","endLine":40,"endColumn":76},{"ruleId":"84","severity":1,"message":"85","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":47},{"ruleId":"84","severity":1,"message":"95","line":2,"column":37,"nodeType":"86","messageId":"87","endLine":2,"endColumn":41},{"ruleId":"91","severity":1,"message":"96","line":8,"column":15,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"96","line":17,"column":19,"nodeType":"93","messageId":"94","endLine":17,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":33,"column":34,"nodeType":"93","messageId":"94","endLine":33,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":51,"column":34,"nodeType":"93","messageId":"94","endLine":51,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":73,"column":54,"nodeType":"93","messageId":"94","endLine":73,"endColumn":56},{"ruleId":"84","severity":1,"message":"97","line":2,"column":38,"nodeType":"86","messageId":"87","endLine":2,"endColumn":45},{"ruleId":"91","severity":1,"message":"92","line":98,"column":42,"nodeType":"93","messageId":"94","endLine":98,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":100,"column":97,"nodeType":"93","messageId":"94","endLine":100,"endColumn":99},{"ruleId":"91","severity":1,"message":"96","line":8,"column":15,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"96","line":17,"column":19,"nodeType":"93","messageId":"94","endLine":17,"endColumn":21},{"ruleId":"91","severity":1,"message":"92","line":33,"column":34,"nodeType":"93","messageId":"94","endLine":33,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":51,"column":34,"nodeType":"93","messageId":"94","endLine":51,"endColumn":36},{"ruleId":"91","severity":1,"message":"92","line":85,"column":57,"nodeType":"93","messageId":"94","endLine":85,"endColumn":59},{"ruleId":"91","severity":1,"message":"92","line":88,"column":59,"nodeType":"93","messageId":"94","endLine":88,"endColumn":61},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","'NewRestaurantForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","Expected '!==' and instead saw '!='.","'Segment' is defined but never used.","no-global-assign","no-unsafe-negation"]