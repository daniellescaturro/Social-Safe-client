[{"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js":"1","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js":"2","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js":"3","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js":"4","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js":"5","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js":"6","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js":"7","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js":"8","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js":"9","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js":"10","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js":"11","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js":"12","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js":"13","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js":"14","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js":"15"},{"size":542,"mtime":1607103651241,"results":"16","hashOfConfig":"17"},{"size":1290,"mtime":1607383551394,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1606956941132,"results":"19","hashOfConfig":"17"},{"size":2583,"mtime":1607366398644,"results":"20","hashOfConfig":"17"},{"size":3468,"mtime":1607374763697,"results":"21","hashOfConfig":"17"},{"size":2491,"mtime":1607377521675,"results":"22","hashOfConfig":"17"},{"size":6117,"mtime":1607386108845,"results":"23","hashOfConfig":"17"},{"size":5004,"mtime":1607385233514,"results":"24","hashOfConfig":"17"},{"size":4789,"mtime":1607376812660,"results":"25","hashOfConfig":"17"},{"size":4277,"mtime":1607299223024,"results":"26","hashOfConfig":"17"},{"size":4245,"mtime":1607365366703,"results":"27","hashOfConfig":"17"},{"size":3724,"mtime":1607299572203,"results":"28","hashOfConfig":"17"},{"size":320,"mtime":1607363854596,"results":"29","hashOfConfig":"17"},{"size":2844,"mtime":1607382756607,"results":"30","hashOfConfig":"17"},{"size":484,"mtime":1607384330629,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fqvaj2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js",[],["70","71"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js",["72","73"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js",["74"],"import React from 'react'\nimport {withRouter} from 'react-router'\nimport { Menu, Button, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport NewRestaurantForm from '../NewRestaurantForm'\nimport '../index.css'\nimport '../App.css'\n\n// \tORIGINAL LOGOUT FUNCTION\n// const logout = async () => {\n//   try {\n//     const url = process.env.REACT_APP_API_URL + \"/api/v1/users/logout\"\n//\n//     const logoutResponse = await fetch(url, {\n//       credentials: 'include'\n//     })\n//     console.log(\"logoutResponse\", logoutResponse);\n//     const logoutJson = await logoutResponse.json()\n//     console.log(\"logoutJson\", logoutJson);\n//\n//     if(logoutResponse.status === 200) {\n//       localStorage.setItem('active', false);\n//\t\t\t props.history.push('/');\n//     }\n//   } catch(error) {\n//     console.error(\"Error logging out\")\n//     console.error(error)\n//   }\n// }\n\n function Navbar(props) {\n\n\tconst logout = async () => {\n\t  try {\n\t    const url = process.env.REACT_APP_API_URL + \"/api/v1/users/logout\"\n\n\t    const logoutResponse = await fetch(url, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tcredentials: 'include'\n\t    })\n\t    console.log(\"logoutResponse\", logoutResponse);\n\t    const logoutJson = await logoutResponse.json()\n\t    console.log(\"logoutJson\", logoutJson);\n\n\t    if(logoutResponse.status === 200) {\n\t      localStorage.setItem('active', null);\n\t\t\t\tlocalStorage.setItem('userData', null);\n\t\t\t\tprops.history.push('/login');\n\t    }\n\t  } catch(error) {\n\t    console.error(\"Error logging out\")\n\t    console.error(error)\n\t  }\n\t}\n\n\n\treturn (\n\t\t<Menu secondary pointing className=\"navbar\">\n\t\t\t<Menu.Item className='companyName'>\n        <Icon name='food' color='grey' className=\"logo\"></Icon>\n        <Link to='/'>Social Safe</Link>\n      </Menu.Item>\n\t\t\t<Menu.Item className=\"menuItems\"><Link to=\"/favorites\">My Favorites</Link></Menu.Item>\n\t\t\t<Menu.Item className=\"menuItems\"><Link to=\"/add_restaurant\">Add Restaurant</Link></Menu.Item>\n\t\t\t<Menu.Item position='right' className=\"menuItems\"><Button><Icon name='sign in'/><Link to=\"/login\">Login</Link></Button></Menu.Item>\n\t\t\t<Menu.Item className='menuItems'><Button><Icon name='log out'/><Link to=\"#\" onClick={()=>logout()}>Logout</Link></Button></Menu.Item>\n\t\t</Menu>\n\t)\n}\nexport default withRouter(Navbar)\n\n//DO I NEED A BUTTON FOR LOGOUT? OR CAN IT BE ACCOMPLISHED WITH A LINK, LIKE ABOVE?\n// <Button size='small' onClick={()=>logout()}>\n// Logout\n// </Button>\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js",["75","76","77","78"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js",["79","80","81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect, Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Icon, Grid, Header, Segment } from 'semantic-ui-react'\nimport '../index.css'\n\nconst RenderRestaurant = ({\n                          restaurant,\n                          favorite,\n                          editRestaurant,\n                          deleteRestaurant,\n                          reviewRestaurant\n                        }) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  const  calculateAvg = (reviews) => {\n    let total = 0\n    reviews.forEach((item, i) => {\n        total += item.social_distancing_rating\n    });\n    return total / reviews.length\n\n  }\n  return(\n    <Card color='brown' key={restaurant.id}>\n      <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n      <Card.Content center={true}>\n        <Card.Header>\n          <a href={restaurant.url}>{restaurant.name}</a>\n        </Card.Header>\n        <Card.Meta>{restaurant.title}</Card.Meta>\n        <Card.Meta>{restaurant.address1}</Card.Meta>\n        <Card.Meta>{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n        <Card.Meta>Rating: {restaurant.rating}</Card.Meta>\n        <Card.Meta>Rating: {restaurant.reviews.length== 0 ? \"No ratings yet\" : calculateAvg(restaurant.reviews) }</Card.Meta>\n        <Card.Meta>Heat Lamps: {restaurant.heat_lamps==true?'Yes':'No'}</Card.Meta>\n        <Link to={`/restaurants/${restaurant.id}`}>See details</Link>\n      </Card.Content>\n      {\n        JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n        ?\n        <Card.Content extra>\n          <Button\n            basic color='brown' onClick={()=> editRestaurant(restaurant.id)}>\n            Edit\n          </Button>\n          <Button\n            basic color='brown'\n            onClick={()=> deleteRestaurant(restaurant.id)}>\n            Delete\n          </Button>\n        </Card.Content>\n        :\n        ''\n      }\n      <Card.Content extra>\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n        <Button color='brown' onClick={() => reviewRestaurant(restaurant.id)}>Review</Button>\n      </Card.Content>\n    </Card>\n\n  )\n}\n\nexport default function HomeList(props) {\n\n  const restaurantsToDisplay = props.restaurants.map(restaurant => {\n    return <RenderRestaurant\n              restaurant={restaurant}\n              favorite={props.favorites[restaurant.id]}\n              key={restaurant.id}\n              deleteRestaurant={props.deleteRestaurant}\n              editRestaurant={props.editRestaurant}\n              reviewRestaurant={props.reviewRestaurant}\n              />\n  })\n  return(\n    <Card.Group centered={true}>\n      {restaurantsToDisplay}\n    </Card.Group>\n  )\n\n}\n\n//ADDED EDITS AND DELETE BUTTONS FOR CURRENT USER. COPIED FROM MYRESTLIST, BUT THREW ERRORS.\n// {\n//   JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n//   ?\n//   <Card.Content extra>\n//     <Button\n//       basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n//       Edit\n//     </Button>\n//     <Button\n//       basic color='brown'\n//       onClick={()=> props.deleteRestaurant(restaurant.id)}>\n//       Delete\n//     </Button>\n//   </Card.Content>\n//   :\n//   ''\n// }\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js",["90"],"import React, { Component } from 'react'\nimport { Form, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\nimport '../index.css'\nimport '../App.css'\n\nexport default class NewRestaurantForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    }\n  }\n\n  handleChange = (event, data) => {\n    console.log(event.target, data)\n    if(data.type === 'checkbox'){\n\n      this.setState({\n        ['heat_lamps']: data.checked\n      })\n    }else{\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n    console.log(event.target)\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.createRestaurant(this.state)\n\n    this.setState({\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    })\n  }\n\n\n  createRestaurant = async (restaurantToAdd) => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/add\"\n        const createRestaurantResponse = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(restaurantToAdd)\n        })\n        const createRestaurantJson = await createRestaurantResponse.json()\n\n        if(createRestaurantResponse.status === 201 || createRestaurantResponse.status === 200){\n          this.setState({\n            restaurants: [...this.state.restaurants, createRestaurantJson.data]\n          })\n        }\n\n      } catch(err) {\n        console.log(\"Error adding restaurant\", err)\n      }\n      localStorage.setItem('active', 'active')\n      this.props.history.push('/')\n    }\n\n  render() {\n    return(\n      <Segment className='form'>\n      <Header className='formHeader' as='h2' color='grey'>Add Restaurant</Header>\n      <Form onSubmit={this.handleSubmit}>\n\n        <Label horizontal>Restaurant Name:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          placeholder=\"Enter restaurant name\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Image:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"image_url\"\n          value={this.state.image_url}\n          placeholder=\"Enter an image link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Link:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"url\"\n          value={this.state.url}\n          placeholder=\"Enter website link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Category:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"Enter category\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Street Address:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"address1\"\n          value={this.state.address1}\n          placeholder=\"Enter street address\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>City:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"city\"\n          value={this.state.city}\n          placeholder=\"Enter city\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>State:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"state\"\n          value={this.state.state}\n          placeholder=\"Enter state\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Zip Code:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"zip_code\"\n          value={this.state.zip_code}\n          placeholder=\"Enter zip code\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Rating:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"rating\"\n          value={this.state.rating}\n          placeholder=\"Enter a rating\"\n          onChange={this.handleChange}\n        />\n        <Label horizontal>Heat Lamps: </Label>\n        <Form.Input\n          control={Checkbox}\n          checked={this.state.heat_lamps}\n          onChange={this.handleChange}\n        />\n\n        <Button type='submit'>Submit</Button>\n        </Form>\n      </Segment>\n    )\n  }\n}\n\n// <Label horizontal>Social Distancing Rating:</Label>\n// <Form.Input\n//   type=\"number\"\n//   name=\"rating\"\n//   value={this.state.rating}\n//   placeholder=\"Enter a resource\"\n//   onChange={this.handleChange}\n// />\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js",["91"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\n\nexport default class EditRestaurantModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.restaurantToEdit.name,\n      image_url: props.restaurantToEdit.image_url,\n      url: props.restaurantToEdit.image_url,\n      title: props.restaurantToEdit.title,\n      address1: props.restaurantToEdit.address1,\n      city: props.restaurantToEdit.city,\n      state: props.restaurantToEdit.state,\n      zip_code: props.restaurantToEdit.zip_code,\n      rating: props.restaurantToEdit.rating,\n      //social_distancing_rating: props.restaurantToEdit, //this is in my Review model, but want data entry available here, if possible\n      heat_lamps: props.restaurantToEdit.heat_lamps\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateRestaurant(this.state)\n  }\n\n\n  render() {\n    return(\n      <Modal className='form' open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header className='formHeader' as='h2' color='grey'>Edit Restaurant</Header>\n        <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Restaurant Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter restaurant name\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Image:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"image_url\"\n            value={this.state.image_url}\n            placeholder=\"Enter an image link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Link:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            placeholder=\"Enter website link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Category:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            placeholder=\"Enter category\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Street Address:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"address1\"\n            value={this.state.address1}\n            placeholder=\"Enter street address\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>City:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            placeholder=\"Enter city\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>State:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"state\"\n            value={this.state.state}\n            placeholder=\"Enter state\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Zip Code:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"zip_code\"\n            value={this.state.zip_code}\n            placeholder=\"Enter zip code\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            value={this.state.rating}\n            placeholder=\"Enter a rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            control={Checkbox}\n            name=\"heat_lamps\"\n            value={this.state.heat_lamps}\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\n// <Label horizontal>Social Distancing Rating:</Label>\n// <Form.Input\n//   type=\"number\"\n//   name=\"rating\"\n//   value={this.state.social_distancing_rating}\n//   placeholder=\"Enter a social distancing rating\"\n//   onChange={this.handleChange}\n// />\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js",["92","93"],"import React, { Component } from 'react'\nimport MyRestaurantsList from '../MyRestaurantsList'\nimport EditRestaurantModal from '../EditRestaurantModal'\nimport { Header } from 'semantic-ui-react'\n\nexport default class MyRestaurantsContainer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      restaurants: [],\n      idOfRestaurantToEdit: -1,\n      action: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  removeFavorite = (fav) =>{\n    let temp = this.state.restaurants.filter(res=>res.id !== fav.id)\n    this.setState({\n      restaurants: temp\n    })\n  }\n\n  getRestaurants = async () => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n      const restaurantsResponse = await fetch(url, {\n        credentials: 'include',\n      })\n\n      const restaurantsJson = await restaurantsResponse.json()\n      console.log(restaurantsJson)\n\n      this.setState({\n        restaurants: restaurantsJson.data\n      })\n    } catch(err) {\n        console.log(\"There was an error getting the item's data. Please try again.\", err)\n    }\n  }\n\n\n  deleteRestaurant = async (idOfRestaurantToDelete) => {\n     try {\n       const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + idOfRestaurantToDelete\n\n       const deleteRestaurantResponse = await fetch(url, {\n         method: 'DELETE',\n         credentials: 'include'\n       })\n\n       const deleteRestaurantJson = await deleteRestaurantResponse.json()\n       console.log(\"deleteRestaurantJson\", deleteRestaurantJson)\n\n       if(deleteRestaurantResponse.status === 200) {\n         this.setState({\n           restaurants: this.state.restaurants.filter(restaurant => restaurant.restaurant_id.id !== idOfRestaurantToDelete)\n         })\n       }\n     } catch(err) {\n       console.log(\"Error deleting restaurant: \", err)\n     }\n   }\n\n\n  editRestaurant = (idOfRestaurantToEdit) => {\n    console.log(\"you are trying to edit restaurant with id: \", idOfRestaurantToEdit)\n\n    this.setState({\n      idOfRestaurantToEdit: idOfRestaurantToEdit\n    })\n  }\n\n  updateRestaurant = async (updatedRestaurantInfo) => {\n    try {\n      let id = this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id.id\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + id\n\n      const updateRestaurantResponse = await fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(updatedRestaurantInfo),\n        //mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n\n        }\n      })\n\n      console.log(\"updateRestaurantResponse\", updateRestaurantResponse)\n      const updateRestaurantJson = await updateRestaurantResponse.json()\n      console.log(\"updateRestaurantJson\", updateRestaurantJson)\n\n      if(updateRestaurantResponse.status == 200) {\n        const restaurants = this.state.restaurants\n        const indexOfRestaurantBeingUpdated = restaurants.findIndex(restaurant => restaurant.id == this.state.idOfRestaurantToEdit)\n        restaurants[indexOfRestaurantBeingUpdated].restaurant_id =  updateRestaurantJson.data\n        this.setState({\n          restaurants: restaurants,\n          idOfRestaurantToEdit: -1\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n  closeModal = () => {\n   this.setState({\n     idOfRestaurantToEdit: -1\n   })\n }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header as='h2' className=\"listHeaders\">My Favorites</Header>\n      <div className=\"myRestaurantsContainer\">\n        <MyRestaurantsList\n          restaurants={this.state.restaurants}\n          editRestaurant={this.editRestaurant}\n          removeFavorite={this.removeFavorite}\n          deleteRestaurant={this.deleteRestaurant}\n          />\n\n      {\n        this.state.idOfRestaurantToEdit !== -1\n        &&\n        <EditRestaurantModal\n          restaurantToEdit={this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id}\n          updateRestaurant={this.updateRestaurant}\n          closeModal={this.closeModal}\n        />\n      }\n      </div>\n      </React.Fragment>\n    )\n  }\n\n\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js",["94","95","96","97","98","99"],"import React, { useEffect, useState} from 'react'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\n\nconst Fav = ({restaurant, favorite, removeFavorite}) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n      removeFavorite(favorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  return(\n\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n  )\n}\n\nexport default function MyRestaurantsList(props) {\n  const restaurants = props.restaurants.map(fav => {\n    let restaurant = fav.restaurant_id\n    return (\n      <Card color='brown' key={restaurant.id}>\n        <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n        <Card.Content>\n          <Card.Header>\n            <a href={restaurant.url}>{restaurant.name}</a>\n          </Card.Header>\n          <Card.Meta>{restaurant.title}</Card.Meta>\n          <Card.Meta>{restaurant.address1}</Card.Meta>\n          <Card.Meta>{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n          <Card.Meta>Rating: {restaurant.rating}</Card.Meta>\n          <Card.Meta>Heat Lamps: {restaurant.heat_lamps == true ? 'Yes': 'No'}</Card.Meta>\n        </Card.Content>\n        {\n          JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n          ?\n          <Card.Content extra>\n            <Button\n              basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n              Edit\n            </Button>\n            <Button\n              basic color='brown'\n              onClick={()=> props.deleteRestaurant(restaurant.id)}>\n              Delete\n            </Button>\n          </Card.Content>\n          :\n          ''\n        }\n        <Card.Content extra>\n          <Fav\n            restaurant={restaurant}\n            favorite={fav}\n            removeFavorite={props.removeFavorite}\n            />\n          <Button color='brown'>Review</Button>\n        </Card.Content>\n      </Card>\n    )\n  })\n\n  return (\n    <Card.Group centered={true}>\n      {restaurants}\n    </Card.Group>\n  )\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js",["100","101","102"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, TextArea, Segment, Checkbox, Header } from 'semantic-ui-react'\n\n\n// how do i display info from another model (i.e., restaurants)? want to display:\n//restaurant Name\n//category / title\n\nexport default class ReviewModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      favorite: '',\n      rating: '',\n      social_distancing_rating: '',\n      heat_lamps: false,\n      comments: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.createReview(this.state)\n\n    this.setState({\n      favorite: '',\n      rating: '',\n      social_distancing_rating: '',\n      heat_lamps: false,\n      comments: ''\n    })\n  }\n\n  createReview = async (reviewToAdd) => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/reviews/\" + this.props.idOfRestaurantToReview\n        const createReviewResponse = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(reviewToAdd)\n        })\n        const createReviewJson = await createReviewResponse.json()\n\n        if(createReviewResponse.status === 201 || createReviewResponse.status === 200){\n          this.props.closeModal()\n        }\n\n      } catch(err) {\n        console.log(\"Error adding review\", err)\n      }\n    }\n\n  render() {\n    return(\n      <Modal open={true} closeIcon={true} onClose={this.props.closeModal}>\n\n        <Header>\n          <h2>Review Restaurant</h2>\n        </Header>\n\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            max=\"5\"\n            min=\"1\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Social Distancing Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"social_distancing_rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            type=\"boolean\"\n            control={Checkbox}\n            name=\"heat_lamps\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Comments:</Label>\n          <Form.TextArea\n            name=\"comments\"\n            value={this.state.comments}\n            placeholder=\"Enter comments\"\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"111","line":2,"column":50,"nodeType":"109","messageId":"110","endLine":2,"endColumn":54},{"ruleId":"107","severity":1,"message":"112","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":47,"column":37,"nodeType":"115","messageId":"116","endLine":47,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":47,"column":74,"nodeType":"115","messageId":"116","endLine":47,"endColumn":76},{"ruleId":"113","severity":1,"message":"114","line":143,"column":42,"nodeType":"115","messageId":"116","endLine":143,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":145,"column":97,"nodeType":"115","messageId":"116","endLine":145,"endColumn":99},{"ruleId":"107","severity":1,"message":"108","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":47},{"ruleId":"107","severity":1,"message":"117","line":3,"column":37,"nodeType":"109","messageId":"110","endLine":3,"endColumn":41},{"ruleId":"107","severity":1,"message":"118","line":3,"column":43,"nodeType":"109","messageId":"110","endLine":3,"endColumn":49},{"ruleId":"107","severity":1,"message":"119","line":3,"column":51,"nodeType":"109","messageId":"110","endLine":3,"endColumn":58},{"ruleId":"113","severity":1,"message":"120","line":14,"column":15,"nodeType":"115","messageId":"116","endLine":14,"endColumn":17},{"ruleId":"113","severity":1,"message":"120","line":23,"column":19,"nodeType":"115","messageId":"116","endLine":23,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":39,"column":34,"nodeType":"115","messageId":"116","endLine":39,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":57,"column":34,"nodeType":"115","messageId":"116","endLine":57,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":87,"column":54,"nodeType":"115","messageId":"116","endLine":87,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":88,"column":54,"nodeType":"115","messageId":"116","endLine":88,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":92,"column":57,"nodeType":"115","messageId":"116","endLine":92,"endColumn":59},{"ruleId":"121","severity":1,"message":"122","line":30,"column":9,"nodeType":"123","messageId":"124","endLine":30,"endColumn":37,"fix":"125"},{"ruleId":"107","severity":1,"message":"119","line":2,"column":38,"nodeType":"109","messageId":"110","endLine":2,"endColumn":45},{"ruleId":"113","severity":1,"message":"114","line":99,"column":42,"nodeType":"115","messageId":"116","endLine":99,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":101,"column":97,"nodeType":"115","messageId":"116","endLine":101,"endColumn":99},{"ruleId":"113","severity":1,"message":"120","line":8,"column":15,"nodeType":"115","messageId":"116","endLine":8,"endColumn":17},{"ruleId":"113","severity":1,"message":"120","line":17,"column":19,"nodeType":"115","messageId":"116","endLine":17,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":33,"column":34,"nodeType":"115","messageId":"116","endLine":33,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":51,"column":34,"nodeType":"115","messageId":"116","endLine":51,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":85,"column":57,"nodeType":"115","messageId":"116","endLine":85,"endColumn":59},{"ruleId":"113","severity":1,"message":"114","line":88,"column":59,"nodeType":"115","messageId":"116","endLine":88,"endColumn":61},{"ruleId":"107","severity":1,"message":"126","line":2,"column":38,"nodeType":"109","messageId":"110","endLine":2,"endColumn":46},{"ruleId":"107","severity":1,"message":"119","line":2,"column":48,"nodeType":"109","messageId":"110","endLine":2,"endColumn":55},{"ruleId":"107","severity":1,"message":"127","line":54,"column":15,"nodeType":"109","messageId":"110","endLine":54,"endColumn":31},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewRestaurantForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'Header' is defined but never used.","'Segment' is defined but never used.","Expected '!==' and instead saw '!='.","no-useless-computed-key","Unnecessarily computed property ['heat_lamps'] found.","Property","unnecessarilyComputedProperty",{"range":"130","text":"131"},"'TextArea' is defined but never used.","'createReviewJson' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[619,633],"'heat_lamps'"]