[{"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js":"1","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js":"2","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js":"3","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js":"4","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js":"5","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js":"6","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js":"7","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js":"8","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js":"9","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js":"10","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js":"11","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js":"12","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js":"13","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js":"14","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js":"15"},{"size":542,"mtime":1607103651241,"results":"16","hashOfConfig":"17"},{"size":1290,"mtime":1607438789028,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1606956941132,"results":"19","hashOfConfig":"17"},{"size":2583,"mtime":1607455740519,"results":"20","hashOfConfig":"17"},{"size":2779,"mtime":1607428456713,"results":"21","hashOfConfig":"17"},{"size":1705,"mtime":1607428304561,"results":"22","hashOfConfig":"17"},{"size":7965,"mtime":1607473848584,"results":"23","hashOfConfig":"17"},{"size":5224,"mtime":1607471619864,"results":"24","hashOfConfig":"17"},{"size":4608,"mtime":1607392259304,"results":"25","hashOfConfig":"17"},{"size":4083,"mtime":1607451961863,"results":"26","hashOfConfig":"17"},{"size":4820,"mtime":1607389840343,"results":"27","hashOfConfig":"17"},{"size":4591,"mtime":1607458797167,"results":"28","hashOfConfig":"17"},{"size":320,"mtime":1607363854596,"results":"29","hashOfConfig":"17"},{"size":3492,"mtime":1607478849920,"results":"30","hashOfConfig":"17"},{"size":3379,"mtime":1607480515673,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"fqvaj2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js",[],["71","72"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js",["73","74"],"import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch, Redirect, Link} from 'react-router-dom';\nimport Footer from './Footer'\n\nimport LoginRegisterContainer from './LoginRegisterContainer'\nimport Navbar from './Navbar'\nimport HomeContainer from './HomeContainer'\nimport MyRestaurantsContainer from './MyRestaurantsContainer'\nimport NewRestaurantForm from './NewRestaurantForm'\nimport RestaurantDetail from './RestaurantDetail'\n\nimport './App.css';\n\nconst Protected = ({ component: Component,  ...rest}) => {\n  return <Route {...rest} render={(props)=>(\n    localStorage.getItem('active') === 'active' ? <Component {...props}/> : <Redirect to='/login'/>\n  )} />\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar/>\n        <Switch>\n          <Route path=\"/login\" exact component={LoginRegisterContainer}/>\n          <Protected path='/' exact component={HomeContainer}/>\n          <Protected path='/restaurants/:restaurant_id' exact component={RestaurantDetail}/>\n          <Protected path='/favorites' exact component={MyRestaurantsContainer}/>\n          <Protected path='/add_restaurant' exact component={NewRestaurantForm}/>\n        </Switch>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js",["75"],"import React from 'react'\nimport { withRouter } from 'react-router'\nimport { Menu, Button, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport NewRestaurantForm from '../NewRestaurantForm'\nimport '../index.css'\nimport '../App.css'\n\n\n function Navbar(props) {\n\n\tconst logout = async () => {\n\t  try {\n\t    const url = process.env.REACT_APP_API_URL + \"/api/v1/users/logout\"\n\n\t    const logoutResponse = await fetch(url, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tcredentials: 'include'\n\t    })\n\t    console.log(\"logoutResponse\", logoutResponse);\n\t    const logoutJson = await logoutResponse.json()\n\t    console.log(\"logoutJson\", logoutJson);\n\n\t    if(logoutResponse.status === 200) {\n\t      localStorage.setItem('active', null);\n\t\t\t\tlocalStorage.setItem('userData', null);\n\t\t\t\tprops.history.push('/login');\n\t    }\n\t  } catch(error) {\n\t    console.error(\"Error logging out\")\n\t    console.error(error)\n\t  }\n\t}\n\n\n\treturn (\n\t\t<Menu secondary pointing className=\"navbar\">\n\t\t\t<Menu.Item className='companyName'>\n        <Icon name='food' color='grey' className=\"logo\"></Icon>\n        <Link to='/'>Social Safe</Link>\n      </Menu.Item>\n\t\t\t<Menu.Item className=\"menuItems\"><Link to=\"/favorites\">My Favorites</Link></Menu.Item>\n\t\t\t<Menu.Item className=\"menuItems\"><Link to=\"/add_restaurant\">Add Restaurant</Link></Menu.Item>\n\t\t\t<Menu.Item position='right' className=\"menuItems\"><Button><Icon name='sign in'/><Link to=\"/login\">Login</Link></Button></Menu.Item>\n\t\t\t<Menu.Item className='menuItems'><Button><Icon name='log out'/><Link to=\"#\" onClick={()=>logout()}>Logout</Link></Button></Menu.Item>\n\t\t</Menu>\n\t)\n}\nexport default withRouter(Navbar)\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js",["76","77","78","79","80"],"import React, { Component, useState } from 'react'\nimport HomeList from '../HomeList'\nimport EditRestaurantModal from '../EditRestaurantModal' //added\nimport ReviewModal from '../ReviewModal'\nimport { Header, Search, Grid, Label} from 'semantic-ui-react'\n\n//original code before adds, except where noted.\nexport default class HomeContainer extends Component {\n  constructor(props) {\n    super(props)\n\n      this.state = {\n        restaurants: [],\n        favorites: {},\n        idOfRestaurantToEdit: -1,\n        idOfRestaurantToReview: -1,\n        restaurantToReview: {},\n        action: '',\n        searchResult: []\n      }\n    }\n\n    setActionState = (action) => {\n      this.setState({\n        action: action\n      })\n    }\n    setSearchResults = (results) => {\n      this.setState({\n        searchResult: results\n      })\n    }\n    getRestaurants = async () => {\n      try {\n\n        console.log(\"the env\", process.env.REACT_APP_API_URL)\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\"\n        console.log(\"about to fetch data from:\")\n        console.log(url)\n        const restaurantsResponse = await fetch(url, {\n        method: 'GET',\n        // mode: \"no-cors\",\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      console.log(restaurantsResponse)\n      const restaurantsJson = await restaurantsResponse.json()\n      console.log(restaurantsJson)\n\n      if(restaurantsResponse.status == 200 || restaurantsResponse.status == 201 ) {\n        this.setState({\n       restaurants: restaurantsJson.data\n      })\n      }\n    } catch(err) {\n      console.log(\"Error getting items data.\", err);\n    }\n\n    try {\n        let url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n        let res = await fetch(url, {\n          method: 'GET',\n          // mode: \"no-cors\",\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        let resJson = await res.json()\n        let favs = {}\n        resJson.data.forEach((item, i) => {\n          console.log(\"item\",item)\n          favs[item['restaurant_id']['id']] = item;\n        });\n        this.setState({favorites: favs})\n\n    }catch(err){\n      console.log(\"ERR\", err)\n    }\n  }\n\n    componentDidMount() {\n      this.getRestaurants()\n  }\n\n\n\n\n  deleteRestaurant = async (idOfRestaurantToDelete) => {\n     try {\n       const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + idOfRestaurantToDelete\n\n       const deleteRestaurantResponse = await fetch(url, {\n         method: 'DELETE',\n         credentials: 'include'\n       })\n\n       const deleteRestaurantJson = await deleteRestaurantResponse.json()\n       console.log(\"deleteRestaurantJson\", deleteRestaurantJson)\n\n       if(deleteRestaurantResponse.status === 200) {\n         this.setState({\n           restaurants: this.state.restaurants.filter(restaurant => restaurant.id !== idOfRestaurantToDelete)\n         })\n       }\n     } catch(err) {\n       console.log(\"Error deleting restaurant: \", err)\n     }\n   }\n\n\n  editRestaurant = (idOfRestaurantToEdit) => {\n    console.log(\"you are trying to edit restaurant with id: \", idOfRestaurantToEdit)\n\n    this.setState({\n      idOfRestaurantToEdit: idOfRestaurantToEdit\n    })\n  }\n\n  reviewRestaurant = (restaurantToReview) => {\n    this.setState({\n      idOfRestaurantToReview: restaurantToReview.id,\n      restaurantToReview: restaurantToReview\n    })\n  }\n\n  updateRestaurant = async (updatedRestaurantInfo) => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + this.state.idOfRestaurantToEdit\n\n      const updateRestaurantResponse = await fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(updatedRestaurantInfo),\n        //mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n\n        }\n      })\n\n      console.log(\"updateRestaurantResponse\", updateRestaurantResponse)\n      const updateRestaurantJson = await updateRestaurantResponse.json()\n      console.log(\"updateRestaurantJson\", updateRestaurantJson)\n\n      if(updateRestaurantResponse.status == 200) {\n        const restaurants = this.state.restaurants\n        const indexOfRestaurantBeingUpdated = restaurants.findIndex(restaurant => restaurant.id == this.state.idOfRestaurantToEdit)\n        restaurants[indexOfRestaurantBeingUpdated] =  updateRestaurantJson.data\n        this.setState({\n          restaurants: restaurants,\n          idOfRestaurantToEdit: -1\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n\n  closeModal = () => {\n   this.setState({\n     idOfRestaurantToEdit: -1\n   })\n }\n\n  closeReviewModal = () => {\n    this.setState({\n      idOfRestaurantToReview: -1\n    })\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <CustomSearch setSearchResults={this.setSearchResults}/>\n        <HomeList\n          restaurants={this.state.searchResult}\n          favorites={this.state.favorites}\n          editRestaurant={this.editRestaurant}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n          />\n        <Header as='h2' className=\"listHeaders\">See All the Restaurants</Header>\n        <div className=\"HomeContainer\">\n        <HomeList\n          restaurants={this.state.restaurants}\n          favorites={this.state.favorites}\n          editRestaurant={this.editRestaurant}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n        />\n\n      {\n        this.state.idOfRestaurantToEdit !== -1\n        &&\n        <EditRestaurantModal\n          restaurantToEdit={this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit)}\n          updateRestaurant={this.updateRestaurant}\n          closeModal={this.closeModal}\n        />\n      }\n\n      {\n        this.state.idOfRestaurantToReview !== -1\n        &&\n        <ReviewModal\n          restaurantToReview={this.state.restaurantToReview}\n          closeModal={this.closeReviewModal}\n          idOfRestaurantToReview={this.state.idOfRestaurantToReview}\n        />\n      }\n\n      </div>\n      </React.Fragment>\n   )\n  }\n}\n\n\nconst CustomSearch = ({ setSearchResults }) => {\n  const  [loading, setLoading] = useState(false)\n  const [results, setResults] = useState([])\n  const [value, setValue] = useState(\"\")\n  const timeoutRef = React.useRef()\n\n  const resultRenderer = ({ name }) => <Label content={name} />\n\n  const handleSearchChange = React.useCallback((e, data)=>{\n    clearTimeout(timeoutRef.current)\n    setValue(data.value)\n    setLoading(true)\n    console.log(\"data\", data.value)\n    timeoutRef.current = setTimeout(async()=>{\n      // make request\n      try {\n        console.log('value', value)\n        const url = process.env.REACT_APP_API_URL + `/api/v1/restaurants/search?location=${value}`\n        const restaurantsResponse = await fetch(url, {\n          credentials: 'include',\n        })\n\n        const restaurantsJson = await restaurantsResponse.json()\n        console.log(restaurantsJson)\n        setLoading(false)\n        setResults(restaurantsJson.data)\n        setSearchResults(restaurantsJson.data)\n      } catch(err) {\n          console.log(\"There was an error getting the item's data. Please try again.\", err)\n      }\n      console.log(\"I should not change as quickly as you type\")\n\n    }, 2000)\n  }, [value])\n\n  React.useEffect(()=> {\n    return () => {\n      clearTimeout(timeoutRef.current)\n    }\n  }, [])\n  return(\n    <Grid>\n      <Grid.Column width={5}></Grid.Column>\n      <Grid.Column width={6}>\n        <Search\n          loading={loading}\n          results={results}\n          resultRenderer={resultRenderer}\n          onSearchChange={handleSearchChange}\n          value={value}\n        />\n      </Grid.Column>\n      <Grid.Column width={5}></Grid.Column>\n    </Grid>\n  )\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"import React, { useState, useEffect, Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Icon, Grid, Header, Segment } from 'semantic-ui-react'\nimport '../index.css'\n\nconst RenderRestaurant = ({\n                          restaurant,\n                          favorite,\n                          editRestaurant,\n                          deleteRestaurant,\n                          reviewRestaurant\n                        }) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        const updateJson = await updateResponse.json()\n      }else{\n        if(restaurant.id != undefined){\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n          const updatedFavoriteInfo = { favorite: !isFavorite }\n          const updateResponse = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(updatedFavoriteInfo),\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n\n          const updateJson = await updateResponse.json()\n        }else {\n          const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/-1\"\n          const updatedFavoriteInfo = { favorite: !isFavorite }\n          const data = {\n            restaurant: restaurant,\n            favorite: !isFavorite\n          }\n          const updateResponse = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          const updateJson = await updateResponse.json()\n        }\n\n\n\n      }\n      setFavorite(!isFavorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  const  calculateAvg = (reviews) => {\n    let total = 0\n    reviews.forEach((item, i) => {\n        total += item.social_distancing_rating\n    });\n    return total / reviews.length\n\n  }\n\n  const  calculateAvgSS = (reviews) => {\n    let total = 0\n    reviews.forEach((item, i) => {\n        total += item.rating\n    });\n    return total / reviews.length\n  }\n\n  return(\n    <Card color='brown' key={restaurant.id}>\n      <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n      <Card.Content center={true}>\n        <Card.Header>\n          <a href={restaurant.url}>{restaurant.name}</a>\n        </Card.Header>\n        <p className=\"restaurantCategory\">{restaurant.title}</p>\n        <Card.Meta>{restaurant.address1}</Card.Meta>\n        <Card.Meta className=\"address\">{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n        <p className=\"cardDetail\"> Yelp Rating: {restaurant.rating}</p>\n        <p className=\"cardDetail\">Social Safe Rating: {restaurant.reviews.length==0 ? \"Not yet rated\" : calculateAvgSS(restaurant.reviews) }</p>\n        <p className=\"cardDetail\">Social Distance Rating: {restaurant.reviews.length==0 ? \"Not yet rated\" : calculateAvg(restaurant.reviews) }</p>\n        <p className=\"cardDetail\">Heat Lamps: {restaurant.heat_lamps==true?'Yes':'No'}</p>\n        <Link to={`/restaurants/${restaurant.id}`}>[See Details]</Link>\n      </Card.Content>\n      {\n        (restaurant.id !== undefined && JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id)\n        ?\n        <Card.Content extra>\n          <Button\n            basic color='brown' onClick={()=> editRestaurant(restaurant.id)}>\n            Edit\n          </Button>\n          <Button\n            basic color='brown'\n            onClick={()=> deleteRestaurant(restaurant.id)}>\n            Delete\n          </Button>\n        </Card.Content>\n        :\n        ''\n      }\n      <Card.Content extra>\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n        <Button color='brown' onClick={() => reviewRestaurant(restaurant)}>Review</Button>\n      </Card.Content>\n    </Card>\n\n  )\n}\n\nexport default function HomeList(props) {\n\n  const restaurantsToDisplay = props.restaurants.map(restaurant => {\n    return <RenderRestaurant\n              restaurant={restaurant}\n              favorite={props.favorites[restaurant.id]}\n              key={restaurant.id}\n              deleteRestaurant={props.deleteRestaurant}\n              editRestaurant={props.editRestaurant}\n              reviewRestaurant={props.reviewRestaurant}\n              />\n  })\n  return(\n    <Card.Group centered={true}>\n      {restaurantsToDisplay}\n    </Card.Group>\n  )\n\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js",["96"],"import React, { Component } from 'react'\nimport { Form, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\nimport '../index.css'\nimport '../App.css'\n\nexport default class NewRestaurantForm extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    }\n  }\n\n  handleChange = (event, data) => {\n    console.log(event.target, data)\n    if(data.type === 'checkbox'){\n\n      this.setState({\n        ['heat_lamps']: data.checked\n      })\n    }else{\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n    console.log(event.target)\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.createRestaurant(this.state)\n\n    this.setState({\n      name: '',\n      image_url: '',\n      url: '',\n      title: '',\n      address1: '',\n      city: '',\n      state: '',\n      zip_code: '',\n      rating: '',\n      heat_lamps: false\n    })\n  }\n\n\n  createRestaurant = async (restaurantToAdd) => {\n      try {\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/add\"\n        const createRestaurantResponse = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          body: JSON.stringify(restaurantToAdd)\n        })\n        const createRestaurantJson = await createRestaurantResponse.json()\n\n        if(createRestaurantResponse.status === 201 || createRestaurantResponse.status === 200){\n          this.setState({\n            restaurants: [...this.state.restaurants, createRestaurantJson.data]\n          })\n        }\n\n      } catch(err) {\n        console.log(\"Error adding restaurant\", err)\n      }\n      localStorage.setItem('active', 'active')\n      this.props.history.push('/')\n    }\n\n  render() {\n    return(\n      <Segment className='form'>\n      <Header className='formHeader' as='h2' color='grey'>Add Restaurant</Header>\n      <Form onSubmit={this.handleSubmit}>\n\n        <Label horizontal>Restaurant Name:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          placeholder=\"Enter restaurant name\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Image:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"image_url\"\n          value={this.state.image_url}\n          placeholder=\"Enter an image link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Link:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"url\"\n          value={this.state.url}\n          placeholder=\"Enter website link\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Category:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          placeholder=\"Enter category\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Street Address:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"address1\"\n          value={this.state.address1}\n          placeholder=\"Enter street address\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>City:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"city\"\n          value={this.state.city}\n          placeholder=\"Enter city\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>State:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"state\"\n          value={this.state.state}\n          placeholder=\"Enter state\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Zip Code:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"zip_code\"\n          value={this.state.zip_code}\n          placeholder=\"Enter zip code\"\n          onChange={this.handleChange}\n        />\n\n        <Label horizontal>Rating:</Label>\n        <Form.Input\n          type=\"number\"\n          name=\"rating\"\n          max=\"5\"\n          min=\"1\"\n          value={this.state.rating}\n          placeholder=\"Enter a rating\"\n          onChange={this.handleChange}\n        />\n        <Label horizontal>Heat Lamps: </Label>\n        <Form.Input\n          control={Checkbox}\n          checked={this.state.heat_lamps}\n          onChange={this.handleChange}\n        />\n\n        <Button type='submit'>Submit</Button>\n        </Form>\n      </Segment>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js",["97","98"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\nimport '../index.css'\n\nexport default class EditRestaurantModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.restaurantToEdit.name,\n      image_url: props.restaurantToEdit.image_url,\n      url: props.restaurantToEdit.image_url,\n      title: props.restaurantToEdit.title,\n      address1: props.restaurantToEdit.address1,\n      city: props.restaurantToEdit.city,\n      state: props.restaurantToEdit.state,\n      zip_code: props.restaurantToEdit.zip_code,\n      rating: props.restaurantToEdit.rating,\n      heat_lamps: props.restaurantToEdit.heat_lamps\n    }\n  }\n\n  handleChange = (event, data) => {\n    console.log(event.target, data)\n    if(data.type === 'checkbox'){\n\n      this.setState({\n        ['heat_lamps']: data.checked\n      })\n    }else{\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n    console.log(event.target)\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateRestaurant(this.state)\n  }\n\n\n  render() {\n    return(\n      <Modal className='form' open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header className='formHeader' as='h2' color='grey'>Edit Restaurant</Header>\n        <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Restaurant Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter restaurant name\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Image:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"image_url\"\n            value={this.state.image_url}\n            placeholder=\"Enter an image link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Link:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            placeholder=\"Enter website link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Category:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            placeholder=\"Enter category\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Street Address:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"address1\"\n            value={this.state.address1}\n            placeholder=\"Enter street address\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>City:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            placeholder=\"Enter city\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>State:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"state\"\n            value={this.state.state}\n            placeholder=\"Enter state\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Zip Code:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"zip_code\"\n            value={this.state.zip_code}\n            placeholder=\"Enter zip code\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            value={this.state.rating}\n            placeholder=\"Enter a rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            control={Checkbox}\n            checked={this.state.heat_lamps}\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js",["99","100"],"import React, { Component } from 'react'\nimport MyRestaurantsList from '../MyRestaurantsList'\nimport EditRestaurantModal from '../EditRestaurantModal'\nimport ReviewModal from '../ReviewModal'\nimport { Header } from 'semantic-ui-react'\n\nexport default class MyRestaurantsContainer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      restaurants: [],\n      idOfRestaurantToEdit: -1,\n      idOfRestaurantToReview: -1,\n      action: ''\n    }\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  removeFavorite = (fav) =>{\n    let temp = this.state.restaurants.filter(res=>res.id !== fav.id)\n    this.setState({\n      restaurants: temp\n    })\n  }\n\n  getRestaurants = async () => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/myfavorites\"\n      const restaurantsResponse = await fetch(url, {\n        credentials: 'include',\n      })\n\n      const restaurantsJson = await restaurantsResponse.json()\n      console.log(restaurantsJson)\n\n      this.setState({\n        restaurants: restaurantsJson.data\n      })\n    } catch(err) {\n        console.log(\"There was an error getting the item's data. Please try again.\", err)\n    }\n  }\n\n\n  deleteRestaurant = async (idOfRestaurantToDelete) => {\n     try {\n       const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + idOfRestaurantToDelete\n\n       const deleteRestaurantResponse = await fetch(url, {\n         method: 'DELETE',\n         credentials: 'include'\n       })\n\n       const deleteRestaurantJson = await deleteRestaurantResponse.json()\n       console.log(\"deleteRestaurantJson\", deleteRestaurantJson)\n\n       if(deleteRestaurantResponse.status === 200) {\n         this.setState({\n           restaurants: this.state.restaurants.filter(restaurant => restaurant.restaurant_id.id !== idOfRestaurantToDelete)\n         })\n       }\n     } catch(err) {\n       console.log(\"Error deleting restaurant: \", err)\n     }\n   }\n\n\n  editRestaurant = (idOfRestaurantToEdit) => {\n    console.log(\"you are trying to edit restaurant with id: \", idOfRestaurantToEdit)\n\n    this.setState({\n      idOfRestaurantToEdit: idOfRestaurantToEdit\n    })\n  }\n\n  reviewRestaurant = (idOfRestaurantToReview) => {\n    this.setState({\n      idOfRestaurantToReview: idOfRestaurantToReview\n    })\n  }\n\n  updateRestaurant = async (updatedRestaurantInfo) => {\n    try {\n      let id = this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id.id\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/restaurants/\" + id\n\n      const updateRestaurantResponse = await fetch(url, {\n        method: 'PUT',\n        body: JSON.stringify(updatedRestaurantInfo),\n        //mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n\n        }\n      })\n\n      console.log(\"updateRestaurantResponse\", updateRestaurantResponse)\n      const updateRestaurantJson = await updateRestaurantResponse.json()\n      console.log(\"updateRestaurantJson\", updateRestaurantJson)\n\n      if(updateRestaurantResponse.status == 200) {\n        const restaurants = this.state.restaurants\n        const indexOfRestaurantBeingUpdated = restaurants.findIndex(restaurant => restaurant.id == this.state.idOfRestaurantToEdit)\n        restaurants[indexOfRestaurantBeingUpdated].restaurant_id =  updateRestaurantJson.data\n        this.setState({\n          restaurants: restaurants,\n          idOfRestaurantToEdit: -1\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n  }\n\n  closeModal = () => {\n   this.setState({\n     idOfRestaurantToEdit: -1\n   })\n }\n\n closeReviewModal = () => {\n   this.setState({\n     idOfRestaurantToReview: -1\n   })\n }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header as='h2' className=\"listHeaders\">My Favorites</Header>\n      <div className=\"myRestaurantsContainer\">\n        <MyRestaurantsList\n          restaurants={this.state.restaurants}\n          editRestaurant={this.editRestaurant}\n          removeFavorite={this.removeFavorite}\n          deleteRestaurant={this.deleteRestaurant}\n          reviewRestaurant={this.reviewRestaurant}\n          />\n\n      {\n        this.state.idOfRestaurantToEdit !== -1\n        &&\n        <EditRestaurantModal\n          restaurantToEdit={this.state.restaurants.find((restaurant) => restaurant.id === this.state.idOfRestaurantToEdit).restaurant_id}\n          updateRestaurant={this.updateRestaurant}\n          closeModal={this.closeModal}\n        />\n      }\n\n      {\n        this.state.idOfRestaurantToReview !== -1\n        &&\n        <ReviewModal\n          closeModal={this.closeReviewModal}\n          idOfRestaurantToReview={this.state.idOfRestaurantToReview}\n        />\n      }\n\n      </div>\n      </React.Fragment>\n    )\n  }\n\n\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js",["101","102","103","104","105","106","107","108","109"],"import React, { useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\n\nconst Fav = ({restaurant, favorite, removeFavorite}) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n      removeFavorite(favorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  return(\n\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n  )\n}\n\nconst  calculateAvg = (reviews) => {\n  let total = 0\n  reviews.forEach((item, i) => {\n      total += item.social_distancing_rating\n  });\n  return total / reviews.length\n}\n\nconst  calculateAvgSS = (reviews) => {\n  let total = 0\n  reviews.forEach((item, i) => {\n      total += item.rating\n  });\n  return total / reviews.length\n}\n\n\nexport default function MyRestaurantsList(props) {\n  console.log(props)\n  const restaurants = props.restaurants.map(fav => {\n    let restaurant = fav.restaurant_id\n    return (\n      <Card color='brown' key={restaurant.id}>\n        <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n        <Card.Content>\n          <Card.Header>\n            <a href={restaurant.url}>{restaurant.name}</a>\n          </Card.Header>\n          <p className=\"restaurantCategory\">{restaurant.title}</p>\n          <Card.Meta>{restaurant.address1}</Card.Meta>\n          <Card.Meta className=\"address\">{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n          <p className=\"cardDetail\">Yelp Rating: {restaurant.rating}</p>\n          <p className=\"cardDetail\">Social Safe Rating: {restaurant.reviews.length==0 ? \"Not yet rated\" : calculateAvg(restaurant.reviews) }</p>\n          <p className=\"cardDetail\">Social Distance Rating: {restaurant.reviews.length== 0 ? \"Not yet rated\" : calculateAvg(restaurant.reviews) }</p>\n          <p className=\"cardDetail\">Heat Lamps: {restaurant.heat_lamps == true ? 'Yes': 'No'}</p>\n          <Link to={`/restaurants/${restaurant.id}`}>[See Details]</Link>\n        </Card.Content>\n        {\n          JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n          ?\n          <Card.Content extra>\n            <Button\n              basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n              Edit\n            </Button>\n            <Button\n              basic color='brown'\n              onClick={()=> props.deleteRestaurant(restaurant.id)}>\n              Delete\n            </Button>\n          </Card.Content>\n          :\n          ''\n        }\n        <Card.Content extra>\n          <Fav\n            restaurant={restaurant}\n            favorite={fav}\n            removeFavorite={props.removeFavorite}\n            />\n          <Button color='brown' onClick={() => props.reviewRestaurant(restaurant.id)}>Review</Button>\n        </Card.Content>\n      </Card>\n    )\n  })\n\n  return (\n    <Card.Group centered={true}>\n      {restaurants}\n    </Card.Group>\n  )\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/ReviewModal/index.js",["110","111","112","113","114","115"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/RestaurantDetail/index.js",["116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":2,"column":50,"nodeType":"126","messageId":"127","endLine":2,"endColumn":54},{"ruleId":"124","severity":1,"message":"129","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":52,"column":37,"nodeType":"132","messageId":"133","endLine":52,"endColumn":39},{"ruleId":"130","severity":1,"message":"131","line":52,"column":74,"nodeType":"132","messageId":"133","endLine":52,"endColumn":76},{"ruleId":"130","severity":1,"message":"131","line":148,"column":42,"nodeType":"132","messageId":"133","endLine":148,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":150,"column":97,"nodeType":"132","messageId":"133","endLine":150,"endColumn":99},{"ruleId":"134","severity":1,"message":"135","line":258,"column":6,"nodeType":"136","endLine":258,"endColumn":13,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":38,"nodeType":"126","messageId":"127","endLine":1,"endColumn":47},{"ruleId":"124","severity":1,"message":"138","line":3,"column":37,"nodeType":"126","messageId":"127","endLine":3,"endColumn":41},{"ruleId":"124","severity":1,"message":"139","line":3,"column":43,"nodeType":"126","messageId":"127","endLine":3,"endColumn":49},{"ruleId":"124","severity":1,"message":"140","line":3,"column":51,"nodeType":"126","messageId":"127","endLine":3,"endColumn":58},{"ruleId":"130","severity":1,"message":"141","line":14,"column":15,"nodeType":"132","messageId":"133","endLine":14,"endColumn":17},{"ruleId":"130","severity":1,"message":"141","line":23,"column":19,"nodeType":"132","messageId":"133","endLine":23,"endColumn":21},{"ruleId":"124","severity":1,"message":"142","line":35,"column":15,"nodeType":"126","messageId":"127","endLine":35,"endColumn":25},{"ruleId":"130","severity":1,"message":"141","line":37,"column":26,"nodeType":"132","messageId":"133","endLine":37,"endColumn":28},{"ruleId":"124","severity":1,"message":"142","line":49,"column":17,"nodeType":"126","messageId":"127","endLine":49,"endColumn":27},{"ruleId":"124","severity":1,"message":"143","line":52,"column":17,"nodeType":"126","messageId":"127","endLine":52,"endColumn":36},{"ruleId":"124","severity":1,"message":"142","line":65,"column":17,"nodeType":"126","messageId":"127","endLine":65,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":106,"column":81,"nodeType":"132","messageId":"133","endLine":106,"endColumn":83},{"ruleId":"130","severity":1,"message":"131","line":107,"column":85,"nodeType":"132","messageId":"133","endLine":107,"endColumn":87},{"ruleId":"130","severity":1,"message":"131","line":108,"column":69,"nodeType":"132","messageId":"133","endLine":108,"endColumn":71},{"ruleId":"130","severity":1,"message":"131","line":112,"column":89,"nodeType":"132","messageId":"133","endLine":112,"endColumn":91},{"ruleId":"144","severity":1,"message":"145","line":30,"column":9,"nodeType":"146","messageId":"147","endLine":30,"endColumn":37,"fix":"148"},{"ruleId":"124","severity":1,"message":"140","line":2,"column":38,"nodeType":"126","messageId":"127","endLine":2,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":29,"column":9,"nodeType":"146","messageId":"147","endLine":29,"endColumn":37,"fix":"149"},{"ruleId":"130","severity":1,"message":"131","line":107,"column":42,"nodeType":"132","messageId":"133","endLine":107,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":109,"column":97,"nodeType":"132","messageId":"133","endLine":109,"endColumn":99},{"ruleId":"130","severity":1,"message":"141","line":9,"column":15,"nodeType":"132","messageId":"133","endLine":9,"endColumn":17},{"ruleId":"130","severity":1,"message":"141","line":18,"column":19,"nodeType":"132","messageId":"133","endLine":18,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":34,"column":34,"nodeType":"132","messageId":"133","endLine":34,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":52,"column":34,"nodeType":"132","messageId":"133","endLine":52,"endColumn":36},{"ruleId":"124","severity":1,"message":"150","line":80,"column":8,"nodeType":"126","messageId":"127","endLine":80,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":104,"column":83,"nodeType":"132","messageId":"133","endLine":104,"endColumn":85},{"ruleId":"130","severity":1,"message":"131","line":105,"column":87,"nodeType":"132","messageId":"133","endLine":105,"endColumn":89},{"ruleId":"130","severity":1,"message":"131","line":106,"column":72,"nodeType":"132","messageId":"133","endLine":106,"endColumn":74},{"ruleId":"130","severity":1,"message":"131","line":110,"column":59,"nodeType":"132","messageId":"133","endLine":110,"endColumn":61},{"ruleId":"124","severity":1,"message":"151","line":2,"column":38,"nodeType":"126","messageId":"127","endLine":2,"endColumn":46},{"ruleId":"124","severity":1,"message":"140","line":2,"column":48,"nodeType":"126","messageId":"127","endLine":2,"endColumn":55},{"ruleId":"124","severity":1,"message":"152","line":2,"column":57,"nodeType":"126","messageId":"127","endLine":2,"endColumn":65},{"ruleId":"130","severity":1,"message":"141","line":47,"column":45,"nodeType":"132","messageId":"133","endLine":47,"endColumn":47},{"ruleId":"124","severity":1,"message":"153","line":57,"column":17,"nodeType":"126","messageId":"127","endLine":57,"endColumn":33},{"ruleId":"124","severity":1,"message":"153","line":76,"column":17,"nodeType":"126","messageId":"127","endLine":76,"endColumn":33},{"ruleId":"130","severity":1,"message":"131","line":33,"column":36,"nodeType":"132","messageId":"133","endLine":33,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":33,"column":72,"nodeType":"132","messageId":"133","endLine":33,"endColumn":74},{"ruleId":"130","severity":1,"message":"131","line":75,"column":100,"nodeType":"132","messageId":"133","endLine":75,"endColumn":102},{"ruleId":"130","severity":1,"message":"131","line":76,"column":104,"nodeType":"132","messageId":"133","endLine":76,"endColumn":106},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NewRestaurantForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'setSearchResults'. Either include it or remove the dependency array. If 'setSearchResults' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["156"],"'Grid' is defined but never used.","'Header' is defined but never used.","'Segment' is defined but never used.","Expected '!==' and instead saw '!='.","'updateJson' is assigned a value but never used.","'updatedFavoriteInfo' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['heat_lamps'] found.","Property","unnecessarilyComputedProperty",{"range":"157","text":"158"},{"range":"159","text":"158"},"'calculateAvgSS' is assigned a value but never used.","'TextArea' is defined but never used.","'Checkbox' is defined but never used.","'createReviewJson' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},[619,633],"'heat_lamps'",[883,897],"Update the dependencies array to be: [setSearchResults, value]",{"range":"162","text":"163"},[7484,7491],"[setSearchResults, value]"]