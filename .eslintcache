[{"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js":"1","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js":"2","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js":"3","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js":"4","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js":"5","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js":"6","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js":"7","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js":"8","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js":"9","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js":"10","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js":"11","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js":"12","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js":"13"},{"size":542,"mtime":1607103651241,"results":"14","hashOfConfig":"15"},{"size":1147,"mtime":1607363035337,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606956941132,"results":"17","hashOfConfig":"15"},{"size":2584,"mtime":1607360910910,"results":"18","hashOfConfig":"15"},{"size":3308,"mtime":1607282544330,"results":"19","hashOfConfig":"15"},{"size":2414,"mtime":1607365596985,"results":"20","hashOfConfig":"15"},{"size":5656,"mtime":1607365176469,"results":"21","hashOfConfig":"15"},{"size":4127,"mtime":1607364953426,"results":"22","hashOfConfig":"15"},{"size":4610,"mtime":1607299414754,"results":"23","hashOfConfig":"15"},{"size":4277,"mtime":1607299223024,"results":"24","hashOfConfig":"15"},{"size":4245,"mtime":1607365366703,"results":"25","hashOfConfig":"15"},{"size":3724,"mtime":1607299572203,"results":"26","hashOfConfig":"15"},{"size":320,"mtime":1607363854596,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"fqvaj2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/index.js",[],["58","59"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/App.js",["60","61"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/reportWebVitals.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/LoginRegisterContainer/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Navbar/index.js",["62","63"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeContainer/index.js",["64","65","66","67"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/HomeList/index.js",["68","69","70","71","72","73","74","75","76","77"],"import React, { useState, useEffect, Component} from 'react'\nimport { Card, Image, Button, Icon, Grid, Header, Segment } from 'semantic-ui-react'\nimport '../index.css'\n\nconst RenderRestaurant = ({restaurant, favorite}) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  return(\n    <Card color='brown' key={restaurant.id}>\n      <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n      <Card.Content center={true}>\n        <Card.Header>\n          <a href={restaurant.url}>{restaurant.name}</a>\n        </Card.Header>\n        <Card.Meta>{restaurant.title}</Card.Meta>\n        <Card.Meta>{restaurant.address1}</Card.Meta>\n        <Card.Meta>{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n        <Card.Meta>Rating: {restaurant.rating}</Card.Meta>\n        <Card.Meta>Heat Lamps: {restaurant.heat_lamps==true?'Yes':'No'}</Card.Meta>\n      </Card.Content>\n      {\n        JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n        ?\n        <Card.Content extra>\n          <Button\n            basic color='brown' onClick={()=> this.state.editRestaurant(restaurant.id)}>\n            Edit\n          </Button>\n          <Button\n            basic color='brown'\n            onClick={()=> this.state.deleteRestaurant(restaurant.id)}>\n            Delete\n          </Button>\n        </Card.Content>\n        :\n        ''\n      }\n      <Card.Content extra>\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n        <Button color='brown'>Review</Button>\n      </Card.Content>\n    </Card>\n\n  )\n}\n\nexport default function HomeList(props) {\n\n  const restaurantsToDisplay = props.restaurants.map(restaurant => {\n    return <RenderRestaurant restaurant={restaurant} favorite={props.favorites[restaurant.id]} key={restaurant.id}/>\n  })\n  return(\n    <Card.Group centered={true}>\n      {restaurantsToDisplay}\n    </Card.Group>\n  )\n\n}\n\n//ADDED EDITS AND DELETE BUTTONS FOR CURRENT USER. COPIED FROM MYRESTLIST, BUT THREW ERRORS.\n// {\n//   JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n//   ?\n//   <Card.Content extra>\n//     <Button\n//       basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n//       Edit\n//     </Button>\n//     <Button\n//       basic color='brown'\n//       onClick={()=> props.deleteRestaurant(restaurant.id)}>\n//       Delete\n//     </Button>\n//   </Card.Content>\n//   :\n//   ''\n// }\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/NewRestaurantForm/index.js",[],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/EditRestaurantModal/index.js",["78"],"import React, { Component } from 'react'\nimport { Form, Modal, Button, Label, Segment, Checkbox, Header } from 'semantic-ui-react'\n\nexport default class EditRestaurantModal extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.restaurantToEdit.name,\n      image_url: props.restaurantToEdit.image_url,\n      url: props.restaurantToEdit.image_url,\n      title: props.restaurantToEdit.title,\n      address1: props.restaurantToEdit.address1,\n      city: props.restaurantToEdit.city,\n      state: props.restaurantToEdit.state,\n      zip_code: props.restaurantToEdit.zip_code,\n      rating: props.restaurantToEdit.rating,\n      //social_distancing_rating: props.restaurantToEdit, //this is in my Review model, but want data entry available here, if possible\n      heat_lamps: props.restaurantToEdit.heat_lamps\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateRestaurant(this.state)\n  }\n\n\n  render() {\n    return(\n      <Modal className='form' open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header className='formHeader' as='h2' color='grey'>Edit Restaurant</Header>\n        <Modal.Content>\n        <Form onSubmit={this.handleSubmit}>\n\n          <Label horizontal>Restaurant Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter restaurant name\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Image:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"image_url\"\n            value={this.state.image_url}\n            placeholder=\"Enter an image link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Link:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            placeholder=\"Enter website link\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Category:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"title\"\n            value={this.state.title}\n            placeholder=\"Enter category\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Street Address:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"address1\"\n            value={this.state.address1}\n            placeholder=\"Enter street address\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>City:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"city\"\n            value={this.state.city}\n            placeholder=\"Enter city\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>State:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"state\"\n            value={this.state.state}\n            placeholder=\"Enter state\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Zip Code:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"zip_code\"\n            value={this.state.zip_code}\n            placeholder=\"Enter zip code\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Rating:</Label>\n          <Form.Input\n            type=\"number\"\n            name=\"rating\"\n            value={this.state.rating}\n            placeholder=\"Enter a rating\"\n            onChange={this.handleChange}\n          />\n\n          <Label horizontal>Heat Lamps:</Label>\n          <Form.Input\n            control={Checkbox}\n            name=\"heat_lamps\"\n            value={this.state.heat_lamps}\n            onChange={this.handleChange}\n          />\n\n          <Modal.Actions>\n            <Button type='submit'>Submit</Button>\n          </Modal.Actions>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\n// <Label horizontal>Social Distancing Rating:</Label>\n// <Form.Input\n//   type=\"number\"\n//   name=\"rating\"\n//   value={this.state.social_distancing_rating}\n//   placeholder=\"Enter a social distancing rating\"\n//   onChange={this.handleChange}\n// />\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsContainer/index.js",["79","80"],"/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/MyRestaurantsList/index.js",["81","82","83","84","85","86"],"import React, { useEffect, useState} from 'react'\nimport { Card, Image, Button, Icon } from 'semantic-ui-react'\nimport '../index.css'\n\n\nconst Fav = ({restaurant, favorite, removeFavorite}) => {\n  let f = false\n  if(favorite != undefined) {\n      f = favorite.favorite\n\n  }\n  const [isFavorite, setFavorite] = useState(f);\n  useEffect(()=> { setFavorite(f) }, [f])\n  const handleClick = async () => {\n\n    try {\n      if(favorite != undefined){\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + favorite.id\n        const updatedFavoriteInfo = {favorite: !isFavorite}\n        const updateResponse = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n        }\n      }else{\n        const url = process.env.REACT_APP_API_URL + \"/api/v1/favorites/\" + restaurant.id\n        const updatedFavoriteInfo = { favorite: !isFavorite }\n        const updateResponse = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(updatedFavoriteInfo),\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n\n        console.log(\"updateResponse\", updateResponse)\n        const updateJson = await updateResponse.json()\n        console.log(\"updateJson\", updateJson)\n\n        if(updateResponse.status == 200) {\n          // update favorite state\n        }\n      }\n      setFavorite(!isFavorite)\n      removeFavorite(favorite)\n\n    } catch(err) {\n      console.log(\"Error updating  info: \", err)\n    }\n\n  }\n  return(\n\n        <Button onClick={()=> { handleClick()}} icon>\n          { isFavorite ? <Icon name='heart' color='pink' /> : <Icon name='heart outline' color='pink' /> }\n        </Button>\n  )\n}\n\nexport default function MyRestaurantsList(props) {\n  const restaurants = props.restaurants.map(fav => {\n    let restaurant = fav.restaurant_id\n    return (\n      <Card color='brown' key={restaurant.id}>\n        <Image centered={true} className=\"restaurantImage\" src={restaurant.image_url} />\n        <Card.Content>\n          <Card.Header>\n            <a href={restaurant.url}>{restaurant.name}</a>\n          </Card.Header>\n          <Card.Meta>{restaurant.title}</Card.Meta>\n          <Card.Meta>{restaurant.address1}</Card.Meta>\n          <Card.Meta>{restaurant.city}, {restaurant.state} {restaurant.zip_code}</Card.Meta>\n          <Card.Meta>Rating: {restaurant.rating}</Card.Meta>\n          <Card.Meta>Heat Lamps: {restaurant.heat_lamps == true ? 'Yes': 'No'}</Card.Meta>\n        </Card.Content>\n        {\n          JSON.parse(localStorage.getItem('userData')).id == restaurant.uploader.id\n          ?\n          <Card.Content extra>\n            <Button\n              basic color='brown' onClick={()=> props.editRestaurant(fav.id)}>\n              Edit\n            </Button>\n            <Button\n              basic color='brown'\n              onClick={()=> props.deleteRestaurant(restaurant.id)}>\n              Delete\n            </Button>\n          </Card.Content>\n          :\n          ''\n        }\n        <Card.Content extra>\n          <Fav\n            restaurant={restaurant}\n            favorite={fav}\n            removeFavorite={props.removeFavorite}\n            />\n          <Button color='brown'>Review</Button>\n        </Card.Content>\n      </Card>\n    )\n  })\n\n  return (\n    <Card.Group centered={true}>\n      {restaurants}\n    </Card.Group>\n  )\n}\n","/Users/daniellescaturro/Local_Documents/Social-Safe-client/src/Footer/index.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":26},{"ruleId":"91","severity":1,"message":"95","line":2,"column":50,"nodeType":"93","messageId":"94","endLine":2,"endColumn":54},{"ruleId":"91","severity":1,"message":"96","line":3,"column":16,"nodeType":"93","messageId":"94","endLine":3,"endColumn":22},{"ruleId":"91","severity":1,"message":"97","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":45,"column":37,"nodeType":"100","messageId":"101","endLine":45,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":45,"column":74,"nodeType":"100","messageId":"101","endLine":45,"endColumn":76},{"ruleId":"98","severity":1,"message":"99","line":137,"column":42,"nodeType":"100","messageId":"101","endLine":137,"endColumn":44},{"ruleId":"98","severity":1,"message":"99","line":139,"column":97,"nodeType":"100","messageId":"101","endLine":139,"endColumn":99},{"ruleId":"91","severity":1,"message":"92","line":1,"column":38,"nodeType":"93","messageId":"94","endLine":1,"endColumn":47},{"ruleId":"91","severity":1,"message":"102","line":2,"column":37,"nodeType":"93","messageId":"94","endLine":2,"endColumn":41},{"ruleId":"91","severity":1,"message":"103","line":2,"column":43,"nodeType":"93","messageId":"94","endLine":2,"endColumn":49},{"ruleId":"91","severity":1,"message":"104","line":2,"column":51,"nodeType":"93","messageId":"94","endLine":2,"endColumn":58},{"ruleId":"98","severity":1,"message":"105","line":7,"column":15,"nodeType":"100","messageId":"101","endLine":7,"endColumn":17},{"ruleId":"98","severity":1,"message":"105","line":16,"column":19,"nodeType":"100","messageId":"101","endLine":16,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":32,"column":34,"nodeType":"100","messageId":"101","endLine":32,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":50,"column":34,"nodeType":"100","messageId":"101","endLine":50,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":72,"column":54,"nodeType":"100","messageId":"101","endLine":72,"endColumn":56},{"ruleId":"98","severity":1,"message":"99","line":75,"column":57,"nodeType":"100","messageId":"101","endLine":75,"endColumn":59},{"ruleId":"91","severity":1,"message":"104","line":2,"column":38,"nodeType":"93","messageId":"94","endLine":2,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":99,"column":42,"nodeType":"100","messageId":"101","endLine":99,"endColumn":44},{"ruleId":"98","severity":1,"message":"99","line":101,"column":97,"nodeType":"100","messageId":"101","endLine":101,"endColumn":99},{"ruleId":"98","severity":1,"message":"105","line":8,"column":15,"nodeType":"100","messageId":"101","endLine":8,"endColumn":17},{"ruleId":"98","severity":1,"message":"105","line":17,"column":19,"nodeType":"100","messageId":"101","endLine":17,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":33,"column":34,"nodeType":"100","messageId":"101","endLine":33,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":51,"column":34,"nodeType":"100","messageId":"101","endLine":51,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":85,"column":57,"nodeType":"100","messageId":"101","endLine":85,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":88,"column":59,"nodeType":"100","messageId":"101","endLine":88,"endColumn":61},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","'NewRestaurantForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'Header' is defined but never used.","'Segment' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]